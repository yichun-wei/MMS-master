<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eccore</name>
    </assembly>
    <members>
        <member name="T:EzCoding.IOLib">
            <summary>
            自訂 IO 函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.IOLib.CopyDirectory(System.String,System.String)">
            <summary>
            將目錄複製到其他目錄。
            </summary>
            <param name="sourceDirectory">要複製的目錄。</param>
            <param name="destDirectory">要複製目錄的目標位罝。</param>
        </member>
        <member name="M:EzCoding.IOLib.PresaveOper(System.String)">
            <summary>
            儲存檔案的前置操作。
            </summary>
            <param name="dirPath">指定目錄的絕對路徑。</param>
        </member>
        <member name="M:EzCoding.IOLib.PresaveOper(System.String,System.Boolean)">
            <summary>
            儲存檔案的前置操作。
            </summary>
            <param name="dirPath">指定目錄的絕對路徑。</param>
            <param name="clearAllFiles">目錄存在時是否清空該目錄的所有檔案。</param>
        </member>
        <member name="M:EzCoding.IOLib.DeleteFilesInDirectory(System.String,System.IO.SearchOption)">
            <summary>
            刪除指定目錄下的檔案。
            </summary>
            <param name="dirPath">目錄路徑。</param>
            <param name="option">指示刪除指定目錄下的所有檔案外，是否也包含所有子目錄的所有檔案。</param>
        </member>
        <member name="M:EzCoding.IOLib.DeleteFilesInDirectory(System.IO.DirectoryInfo,System.IO.SearchOption)">
            <summary>
            刪除指定目錄下的檔案。
            </summary>
            <param name="dirPath">System.IO.DirectoryInfo。</param>
            <param name="option">指示刪除指定目錄下的所有檔案外，是否也包含所有子目錄的所有檔案。</param>
        </member>
        <member name="M:EzCoding.IOLib.DeleteDirectory(System.String)">
            <summary>
            刪除目錄及其子目錄和檔案。
            </summary>
            <param name="dirPath">目錄路徑。</param>
        </member>
        <member name="M:EzCoding.IOLib.GetFileUnitSize(System.String,System.Int32)">
            <summary>
            取得轉換為單位表示的檔案大小。
            </summary>
            <param name="fileName">檔案的完整路徑。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 28），若為 0 則直接無條件進位。</param>
            <returns>轉換為單位表示的檔案大小。</returns>
        </member>
        <member name="M:EzCoding.IOLib.GetFileUnitSize(System.IO.FileInfo,System.Int32)">
            <summary>
            取得轉換為單位表示的檔案大小。
            </summary>
            <param name="file">System.IO.FileInfo。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 28），若為 0 則直接無條件進位。</param>
            <returns>轉換為單位表示的檔案大小。</returns>
        </member>
        <member name="M:EzCoding.IOLib.GetFileUnitSize(System.Int64,System.Int32)">
            <summary>
            取得轉換為單位表示的檔案大小。
            </summary>
            <param name="fileSize">檔案大小。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 28），若為 0 則直接無條件進位。</param>
            <returns>轉換為單位表示的檔案大小。</returns>
        </member>
        <member name="M:EzCoding.IOLib.StreamToBytes(System.IO.Stream)">
            <summary>
            將 Stream 轉換成 byte[]。
            </summary>
            <param name="stream">來源資料流。</param>
            <returns>位元組陣列。</returns>
            <exception cref="T:System.ArgumentNullException">參數 stream 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.BytesToStream(System.Byte[])">
            <summary>
            將 byte[] 轉換成 Stream。
            </summary>
            <param name="buffer">位元組陣列。</param>
            <returns>System.IO.Stream。</returns>
            <exception cref="T:System.ArgumentNullException">參數 buffer 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.CopyStream(System.IO.Stream)">
            <summary>
            複製一份相同的 System.IO.Stream。
            </summary>
            <param name="stream">來源資料流。</param>
            <returns>來源資料流的複本。</returns>
            <exception cref="T:System.ArgumentNullException">參數 stream 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.StreamToMemoryStream(System.IO.Stream)">
            <summary>
            將 Stream 轉換成 MemoryStream。
            </summary>
            <param name="stream">來源資料流。</param>
            <returns>System.IO.MemoryStream。</returns>
            <exception cref="T:System.ArgumentNullException">參數 stream 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.StreamToFile(System.IO.Stream,System.String)">
            <summary> 
            將 Stream 寫入檔案。
            </summary> 
            <param name="stream">來源資料流。</param>
            <param name="fileName">檔案的完整路徑。</param>
            <exception cref="T:System.ArgumentNullException">參數 stream 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 fileName 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.FileToStream(System.String)">
            <summary> 
            將檔案轉換成 Stream。
            </summary> 
            <param name="fileName">檔案的完整路徑。</param>
            <exception cref="T:System.ArgumentNullException">參數 fileName 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IOLib.ConvertToShortFilePath(System.String,System.Int32)">
            <summary>
            將檔案實際路徑轉換為指定長度的短路徑。
            </summary>
            <param name="value">檔案實際路徑。</param>
            <param name="maxLength">最大長度。</param>
            <returns>檔案實際路徑的短路徑表示。</returns>
        </member>
        <member name="M:EzCoding.IOLib.MakeFileNameValid(System.String)">
            <summary>
            將檔案名稱置換為合法字串，若有不合法的字串時。
            </summary>
            <param name="fileName">檔案名稱。</param>
            <returns>合法的檔案名稱。</returns>
        </member>
        <member name="M:EzCoding.IOLib.CheckFileNameValid(System.String)">
            <summary>
            檢查檔案名稱是否合法。
            </summary>
            <param name="fileName">檔案名稱。</param>
            <returns>是否為合法的檔案名稱。</returns>
        </member>
        <member name="M:EzCoding.IOLib.IsFilesEqual(System.String,System.String)">
            <summary>
            比較兩個檔案內容是否一致（精準比較）。
            </summary>
            <param name="fileName1">檔案 1。</param>
            <param name="fileName2">檔案 2。</param>
            <returns>若檔案內容一致則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="T:EzCoding.Security.TripleCoverSequenceCreatedInfo">
            <summary>
            三重遮蔽式序號建立後的結果資訊。
            </summary>
        </member>
        <member name="P:EzCoding.Security.TripleCoverSequenceCreatedInfo.Sequence">
            <summary>
            取得序號。
            </summary>
        </member>
        <member name="P:EzCoding.Security.TripleCoverSequenceCreatedInfo.CheckPoint">
            <summary>
            取得檢核點。
            </summary>
        </member>
        <member name="P:EzCoding.Security.TripleCoverSequenceCreatedInfo.CheckCodeOrder">
            <summary>
            取得檢核碼順序。
            </summary>
        </member>
        <member name="P:EzCoding.Security.TripleCoverSequenceCreatedInfo.CheckCode">
            <summary>
            取得檢核碼。
            </summary>
        </member>
        <member name="T:EzCoding.Security.TripleCoverSequence">
            <summary>
            三重遮蔽式序號實作類別。
            </summary>
        </member>
        <member name="M:EzCoding.Security.TripleCoverSequence.#ctor(System.String,System.String)">
            <summary>
            初始化 EzCoding.Security.TripleCoverSequence 類別的新執行個體。
            </summary>
            <param name="privateKey">序號金鑰。</param>
            <param name="prefixNumber">前綴號碼（null 或 empty 則不使用前綴號碼）。</param>
        </member>
        <member name="M:EzCoding.Security.TripleCoverSequence.Create(System.Int32,System.String)">
            <summary>
            建立一個新的序號。
            </summary>
            <param name="seqLength">序號的流水號長度（前綴號碼 + 三碼檢核碼 + 指定的流水號長度 + 後綴號碼 = 序號）。</param>
            <param name="append">要額外附加進演算的數值字串，否則為 null 或 empty（此值不會顯示於序號中）。</param>
            <returns>序號。</returns>
        </member>
        <member name="M:EzCoding.Security.TripleCoverSequence.VerifySequence(System.Int32,System.String,System.String,System.String)">
            <summary>
            驗證是否為合法序號。
            </summary>
            <param name="checkPoint">檢核點。</param>
            <param name="checkCodeOrder">檢核順序。</param>
            <param name="append">附加演算的數值字串，若沒有則為 null 或 empty。</param>
            <param name="seq">要驗證的序號。</param>
            <returns>是否為合法序號。</returns>
        </member>
        <member name="M:EzCoding.Security.TripleCoverSequence.ComputeCheckCode(System.String,System.String)">
            <summary>
            計算檢核碼。
            </summary>
            <param name="value">演算的數值字串。</param>
            <param name="carryBase">演算基底。</param>
            <returns>檢核碼。</returns>
        </member>
        <member name="T:EzCoding.Priority">
            <summary>
            指定優先權層級。
            </summary>
        </member>
        <member name="F:EzCoding.Priority.None">
            <summary>
            不指定。
            </summary>
        </member>
        <member name="F:EzCoding.Priority.Low">
            <summary>
            具有低的優先權。
            </summary>
        </member>
        <member name="F:EzCoding.Priority.Normal">
            <summary>
            具有一般的優先權。
            </summary>
        </member>
        <member name="F:EzCoding.Priority.High">
            <summary>
            具有高的優先權。
            </summary>
        </member>
        <member name="T:EzCoding.IPAddressLib">
            <summary>
            網際網路通訊協定 (IP) 位址操作函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.IPAddressLib.IsIPAddress(System.String)">
            <summary>
            判斷字串是否為有效的 IP 位址。
            驗證包含 IPv4 及 IPv6 的字串標準標記和數值表示。
            </summary>
            <param name="ip">要驗證的 IP 字串。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.IPAddressLib.IsIPv4Address(System.String)">
            <summary>
            判斷字串是否為有效的 IP 第 4 版位址。
            </summary>
            <param name="ip">要驗證的 IP 字串。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.IPAddressLib.IsIPv6Address(System.String)">
            <summary>
            判斷字串是否為有效的 IP 第 6 版位址。
            </summary>
            <param name="ip">要驗證的 IP 字串。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.IPAddressLib.GetHostDnsIPs(System.String)">
            <summary>
            取得 DNS 對應的 IP 位址清單。
            </summary>
            <param name="hostOrAddr"></param>
            <returns></returns>
        </member>
        <member name="M:EzCoding.IPAddressLib.Compare(System.String,System.String)">
            <summary>
            比較兩個指定的 IP 位址是否相等。
            只有參數 baseIP 支援萬用字元「*」、範圍表示法和逗點區隔表示法。
            </summary>
            <remarks>
            參數 baseIP 可支援萬用字元「*」表示法（如「192.168.*」）、範圍表示法（如「192.168.0.100-200」）和逗點區隔表示法（如「192.168.0.1,3,5」），也支援混合表示法（如「10,15,100-200,210.150-160,200.*」）。必須注意的是，解析運算時，只要遇到萬用字元「*」，即判斷為 true，例如比較 IP 為「192.168.0.100」，基準 IP 為「192.*.1.200」，也會回傳 true 值。
            </remarks>
            <param name="compareIP">要被比較的 IP 位址。</param>
            <param name="baseIP">基準範圍的 IP 位址。支援萬用字元（例「192.168.*」）、範圍表示法（例「192.168.0.100-200」）、逗點區隔（例「192.168.0.1,3,5」）表示法及混合表示法（例「10,15,100-200,210.150-160,200.*」）。</param>
            <returns>指定的 compareIP 是否在 baseIP 清單中。</returns>
            <exception cref="T:System.ArgumentNullException">
            compareIP 為 null 值。
            baseIP 為 null 值。
            </exception>
        </member>
        <member name="M:EzCoding.IPAddressLib.CompareWildcard(System.String,System.String)">
            <summary>
            比較兩個指定的 IP 範圍否包含相同的 IP 位址。
            只有參數 baseIP 支援萬用字元「*」、範圍表示法和逗點區隔表示法。
            </summary>
            <remarks>
            參數 baseIP 可支援萬用字元「*」表示法（如「192.168.*」）、範圍表示法（如「192.168.0.100-200」）和逗點區隔表示法（如「192.168.0.1,3,5」），也支援混合表示法（如「10,15,100-200,210.150-160,200.*」）。必須注意的是，解析運算時，只要遇到萬用字元「*」，即判斷為 true，例如比較 IP 為「192.168.0.100」，基準 IP 為「192.*.1.200」，也會回傳 true 值。
            </remarks>
            <param name="wildcard1">比較的 IP 範圍。支援萬用字元（例「192.168.*」）、範圍表示法（例「192.168.0.100-200」）、逗點區隔（例「192.168.0.1,3,5」）表示法及混合表示法（例「10,15,100-200,210.150-160,200.*」）。</param>
            <param name="wildcard2">比較的 IP 範圍。支援萬用字元（例「192.168.*」）、範圍表示法（例「192.168.0.100-200」）、逗點區隔（例「192.168.0.1,3,5」）表示法及混合表示法（例「10,15,100-200,210.150-160,200.*」）。</param>
            <returns>指定的 wildcard1 及 wildcard2 是否包含相同的 IP 位址。</returns>
            <exception cref="T:System.ArgumentNullException">
            wildcard1 為 null 值。
            wildcard2 為 null 值。
            </exception>
        </member>
        <member name="M:EzCoding.IPAddressLib.IPAddreddToIPNumbers(System.String)">
            <summary>
            將 IP 位址轉換為 IP 數值。
            </summary>
            <param name="ipAddress">IP 位址。</param>
            <returns>IP 數值。</returns>
            <exception cref="T:System.ArgumentNullException">ipAddress 為 null 值。</exception>
        </member>
        <member name="M:EzCoding.IPAddressLib.IPNumberToIPAddress(System.Int64)">
            <summary>
            將 IP 數值轉換為 IP 位址。
            </summary>
            <param name="ipNumber">IP 數值。</param>
            <returns>IP 位址。</returns>
        </member>
        <member name="M:EzCoding.IPAddressLib.VerifyIPWildcard(System.String)">
            <summary>
            驗證 IP 萬用字元格式規則是否正確。
            </summary>
            <param name="wildcard">IP 萬用字元。</param>
            <returns>若驗證通過則回傳 true；否則回傳 false。</returns>
        </member>
        <member name="T:EzCoding.TraceLevel">
            <summary>
            指定訊息的回饋層級。
            </summary>
        </member>
        <member name="F:EzCoding.TraceLevel.None">
            <summary>
            不指定。
            </summary>
        </member>
        <member name="F:EzCoding.TraceLevel.Info">
            <summary>
            一般訊息層級。可被忽略的訊息。
            </summary>
        </member>
        <member name="F:EzCoding.TraceLevel.Warning">
            <summary>
            警告層級。不影響程序的正常進行，但必須被提出的警告訊息。
            </summary>
        </member>
        <member name="F:EzCoding.TraceLevel.Error">
            <summary>
            錯誤層級。立即中斷程序的進行，並回傳錯誤訊息。
            </summary>
        </member>
        <member name="T:EzCoding.StatusOption">
            <summary>
            狀態操作。
            </summary>
        </member>
        <member name="F:EzCoding.StatusOption.MarkDelete">
            <summary>
            註解刪除。
            </summary>
        </member>
        <member name="F:EzCoding.StatusOption.RemarkDelete">
            <summary>
            復原註解刪除。
            </summary>
        </member>
        <member name="F:EzCoding.StatusOption.Enable">
            <summary>
            啟用。
            </summary>
        </member>
        <member name="F:EzCoding.StatusOption.Disable">
            <summary>
            停用。
            </summary>
        </member>
        <member name="T:EzCoding.Sort">
            <summary>
            排序方式。
            </summary>
        </member>
        <member name="F:EzCoding.Sort.Ascending">
            <summary>
            升冪。
            </summary>
        </member>
        <member name="F:EzCoding.Sort.Descending">
            <summary>
            降冪。
            </summary>
        </member>
        <member name="T:EzCoding.UserTemplateRenderMode">
            <summary>
            樣板形式。
            </summary>
        </member>
        <member name="F:EzCoding.UserTemplateRenderMode.HtmlMarker">
            <summary>
            以 HTML 註解表達的樣板。
            例如「&lt;!--[Template:Member Account="Fan"]--&gt;」。
            </summary>
        </member>
        <member name="F:EzCoding.UserTemplateRenderMode.HtmlMarkerSimplify">
            <summary>
            以 HTML 註解表達的精簡樣板。
            例如「&lt;!--[:Member Account="Fan"]--&gt;」。
            </summary>
        </member>
        <member name="F:EzCoding.UserTemplateRenderMode.CurlyBrackets">
            <summary>
            以大括弧包覆表達的樣板。
            例如「{:Member Account="Fan"}」。
            </summary>
        </member>
        <member name="F:EzCoding.UserTemplateRenderMode.SquareBrackets">
            <summary>
            以中括弧包覆表達的樣板。
            例如「[:Member Account="Fan"]」。
            </summary>
        </member>
        <member name="T:EzCoding.UserTemplateParser">
            <summary>
            使用者定義的樣板解析器。
            </summary>
        </member>
        <member name="M:EzCoding.UserTemplateParser.#ctor(EzCoding.UserTemplateRenderMode,System.String)">
            <summary>
            初始化 EzCoding.UserTemplateParser 類別的新執行個體。
            </summary>
            <param name="renderMode">樣板形式。</param>
            <param name="source">解析的原始字串。</param>
        </member>
        <member name="M:EzCoding.UserTemplateParser.Replace(System.String,System.String)">
            <summary>
            在不含屬性的樣板情況下，快速替換使用者定義的樣板名稱。
            此方法並不會包含樣板屬性的操作。
            </summary>
            <param name="templateName">使用者定義的樣板名稱。</param>
            <param name="replaceSring">要替換的字串。</param>
            <returns>取代原始字串後的內容。</returns>
        </member>
        <member name="M:EzCoding.UserTemplateParser.Parsing(System.String)">
            <summary>
            依樣板名稱取得使用者定義的樣板集合。
            </summary>
            <param name="templateName">使用者定義的樣板名稱。</param>
            <returns>EzCoding.Collections.UserTemplateCollection。</returns>
        </member>
        <member name="P:EzCoding.UserTemplateParser.RenderMode">
            <summary>
            使用者定義的樣板比對樣式。
            </summary>
        </member>
        <member name="P:EzCoding.UserTemplateParser.TemplatePattern">
            <summary>
            使用者定義的樣板比對樣式。
            </summary>
        </member>
        <member name="P:EzCoding.UserTemplateParser.AttributePatten">
            <summary>
            使用者定義的屬性比對樣式。
            </summary>
        </member>
        <member name="P:EzCoding.UserTemplateParser.Source">
            <summary>
            取得或設定解析的原始字串。
            </summary>
        </member>
        <member name="P:EzCoding.UserTemplateParser.UserTemplates">
            <summary>
            取得使用者定義的樣板集合。
            </summary>
        </member>
        <member name="T:EzCoding.ScheduleTimeSpan">
            <summary>
            固定時間排程的實作類別。
            </summary>
        </member>
        <member name="M:EzCoding.ScheduleTimeSpan.#ctor(System.TimeSpan)">
            <summary>
            初始化 EzCoding.ScheduleTimeSpan 類別的新執行個體。
            </summary>
            <param name="executeTime">執行排程的時間。</param>
        </member>
        <member name="M:EzCoding.ScheduleTimeSpan.CheckRunning">
            <summary>
            檢查是否可以執行。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EzCoding.ScheduleTimeSpan.ExecuteTime">
            <summary>
            取得執行排程的時間。
            </summary>
        </member>
        <member name="T:EzCoding.UseDateTimeFormat">
            <summary>
            使用的日期時間格式。
            </summary>
        </member>
        <member name="F:EzCoding.UseDateTimeFormat.OnlyTime">
            <summary>
            僅使用時間格式（HH:mm:ss）。
            </summary>
        </member>
        <member name="F:EzCoding.UseDateTimeFormat.OlnyDate">
            <summary>
            僅使用日期格式（yyyy/MM/dd）。
            </summary>
        </member>
        <member name="F:EzCoding.UseDateTimeFormat.DateAndTime">
            <summary>
            使用日期和時間格式（yyyy/MM/dd HH:mm:ss）。
            </summary>
        </member>
        <member name="T:EzCoding.LeftRightDirection">
            <summary>
            左右方向。
            </summary>
        </member>
        <member name="F:EzCoding.LeftRightDirection.Left">
            <summary>
            左邊。
            </summary>
        </member>
        <member name="F:EzCoding.LeftRightDirection.Right">
            <summary>
            右邊。
            </summary>
        </member>
        <member name="T:EzCoding.Collections.UserTemplateCollection">
            <summary>
            使用者定義的樣板集合。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.#ctor">
            <summary>
            初始化 EzCoding.Collections.UserTemplateCollection 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.Add(EzCoding.Collections.UserTemplate)">
            <summary>
            加入一筆 EzCoding.Collections.UserTemplate。
            當加入的「template」值重複時，會自動略過加入操作。
            </summary>
            <param name="item">要加入的 EzCoding.Collections.UserTemplate。值不可以是 Null 參考。</param>
            <returns>加入的 EzCoding.Collections.UserTemplate 位於 EzCoding.Collections.UserTemplateCollection 中的索引值。</returns>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.Add(System.String,System.String)">
            <summary>
            依指定的 template 及 templateName 加入到 EzCoding.Collections.UserTemplateCollection。
            當加入的「template」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="name">使用者定義的樣板名稱。</param>
            <param name="template">使用者定義的樣板完整字串。</param>
            <returns>加入的 EzCoding.Collections.UserTemplate 位於 EzCoding.Collections.UserTemplateCollection 中的索引值。</returns>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.Clear">
            <summary>
            將所有元素從 EzCoding.Collections.UserTemplateCollection 移除。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.IndexOf(System.String)">
            <summary>
            傳回 EzCoding.Collections.UserTemplateCollection 中第一個符合樣板名稱以零起始的索引。
            </summary>
            <param name="name">要在 EzCoding.Collections.UserTemplateCollection 中尋找的樣板名稱。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.UserTemplateCollection 中第一個符合元素之以零起始的索引，否則為 -1。</returns>
            <exception cref="T:System.ArgumentNullException">參數 template 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.GetEnumerator">
            <summary>
            傳回在 EzCoding.Collections.UserTemplateCollection 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.UserTemplateCollection.System#Collections#Generic#IEnumerable{EzCoding#Collections#UserTemplate}#GetEnumerator">
            <summary>
            傳回在 EzCoding.Collections.UserTemplateCollection 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.UserTemplateCollection.Item(System.Int32)">
            <summary>
            依索引子取得或設定 EzCoding.Collections.UserTemplate。
            </summary>
            <param name="index">索引子。</param>
            <returns>EzCoding.Collections.UserTemplate。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">索引子不在陣列索引範圍內。</exception>
        </member>
        <member name="P:EzCoding.Collections.UserTemplateCollection.Item(System.String)">
            <summary>
            依索引子取得或設定 EzCoding.Collections.UserTemplate。
            </summary>
            <param name="name">使用者定義的樣板名稱。</param>
            <returns>EzCoding.Collections.UserTemplate。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">索引子不在陣列索引範圍內。</exception>
        </member>
        <member name="P:EzCoding.Collections.UserTemplateCollection.Count">
            <summary>
            取得 EzCoding.Collections.UserTemplateCollection 中實際包含的 EzCoding.Collections.UserTemplate 執行個體數。
            </summary>
        </member>
        <member name="T:EzCoding.Collections.UserTemplate">
            <summary>
            使用者定義的樣板物件。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.UserTemplate.#ctor(System.String,System.String)">
            <summary>
            初始化 EzCoding.Collections.UserTemplate 類別的新執行個體，並同時賦予使用者定義的樣板完整字串。
            </summary>
            <param name="name">使用者定義的樣板名稱。</param>
            <param name="template">使用者定義的樣板完整字串。</param>
        </member>
        <member name="P:EzCoding.Collections.UserTemplate.Name">
            <summary>
            使用者定義的樣板名稱。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.UserTemplate.Template">
            <summary>
            取得使用者定義的樣板完整字串。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.UserTemplate.Attributes">
            <summary>
            取得使用者定義的樣板屬性集合。
            </summary>
        </member>
        <member name="T:EzCoding.Drawing.Drawing2D.ImageResizeMode">
            <summary>
            調整圖片大小的模式。
            </summary>
        </member>
        <member name="F:EzCoding.Drawing.Drawing2D.ImageResizeMode.DependOnDesignatedSize">
            <summary>
            依指定的大小調整。
            </summary>
        </member>
        <member name="F:EzCoding.Drawing.Drawing2D.ImageResizeMode.LimitInLessThanDesignatedSize">
            <summary>
            限制在指定的大小以內（含），若圖片未超過指定的大小，則不進行調整。
            </summary>
        </member>
        <member name="T:EzCoding.Security.Cryptography.MD5Lib">
            <summary>
            自訂 MD5 雜湊演算法函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.Security.Cryptography.MD5Lib.#ctor">
            <summary>
            不初始化 EzCoding.Security.Cryptography.MD5Lib 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Security.Cryptography.MD5Lib.GetMD5HashValue(System.String)">
            <summary>
            取得經過 MD5 雜湊演算法處理後的字串。預設編碼設定為 UTF8。
            </summary>
            <param name="value">需要加密的字串。</param>
            <returns>經過 MD5 雜湊演算法處理後的字串。</returns>
        </member>
        <member name="M:EzCoding.Security.Cryptography.MD5Lib.GetMD5HashValue(System.String,System.Text.Encoding)">
            <summary>
            取得經過 MD5 雜湊演算法處理後的字串。
            </summary>
            <param name="value">需要加密的字串。</param>
            <param name="encoding">字元編碼的方式。</param>
            <returns>經過 MD5 雜湊演算法處理後的字串。</returns>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Security.Cryptography.MD5Lib.GetMD5HashValue(System.String[])">
            <summary>
            取得經過 MD5 雜湊演算法處理後的字串。預設編碼設定為 UTF8。
            </summary>
            <param name="values">需要加密的字串陣列。</param>
            <returns>經過 MD5 雜湊演算法處理後的字串。</returns>
        </member>
        <member name="M:EzCoding.Security.Cryptography.MD5Lib.GetMD5HashValue(System.String[],System.Text.Encoding)">
            <summary>
            取得經過 MD5 雜湊演算法處理後的字串。
            </summary>
            <param name="values">需要加密的字串陣列。</param>
            <param name="encoding">字元編碼的方式。</param>
            <returns>經過 MD5 雜湊演算法處理後的字串。</returns>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="T:EzCoding.FeedbackMessage">
            <summary>
            定義支援系統內部訊息回饋的實作。
            </summary>
        </member>
        <member name="T:EzCoding.ILibrary">
            <summary>
            函式庫的基底介面。
            </summary>
        </member>
        <member name="P:EzCoding.ILibrary.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="M:EzCoding.FeedbackMessage.#ctor">
            <summary>
            初始化 EzCoding.FeedbackMessage 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.FeedbackMessage.#ctor(System.String,System.String,System.String,EzCoding.Priority,EzCoding.TraceLevel)">
            <summary>
            依完整的訊息回饋初始化 EzCoding.FeedbackMessage 類別的新執行個體。
            </summary>
            <param name="code">代碼。</param>
            <param name="message">訊息。</param>
            <param name="where">發生位置。</param>
            <param name="priority">權先權層級。</param>
            <param name="traceLevel">回饋層級。</param>
        </member>
        <member name="M:EzCoding.FeedbackMessage.Fill(System.String,System.String,System.String,EzCoding.Priority,EzCoding.TraceLevel)">
            <summary>
            設定 EzCoding.FeedbackMessage 完整的訊息回饋內容。
            </summary>
            <param name="code">代碼。</param>
            <param name="message">訊息。</param>
            <param name="where">發生位置。</param>
            <param name="priority">權先權層級。</param>
            <param name="traceLevel">回饋層級。</param>
        </member>
        <member name="M:EzCoding.FeedbackMessage.Output">
            <summary>
            輸出 EzCoding.FeedbackMessage 的完整訊息。
            </summary>
            <returns>EzCoding.FeedbackMessage 的完整訊息。</returns>
        </member>
        <member name="M:EzCoding.FeedbackMessage.ToString">
            <summary>
            輸出 EzCoding.FeedbackMessage 的完整訊息。
            </summary>
            <returns>EzCoding.FeedbackMessage 的完整訊息。</returns>
        </member>
        <member name="P:EzCoding.FeedbackMessage.Code">
            <summary>
            系統內部所產生的任何訊息的代碼。
            </summary>
        </member>
        <member name="P:EzCoding.FeedbackMessage.Message">
            <summary>
            系統內部所產生的任何訊息。
            </summary>
        </member>
        <member name="P:EzCoding.FeedbackMessage.Where">
            <summary>
            系統內部所產生的任何訊息的發生位置。
            </summary>
        </member>
        <member name="P:EzCoding.FeedbackMessage.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="P:EzCoding.FeedbackMessage.Priority">
            <summary>
            取得或設定訊息的權先權層級。
            </summary>
        </member>
        <member name="P:EzCoding.FeedbackMessage.TraceLevel">
            <summary>
            取得或設定訊息的回饋層級。
            </summary>
        </member>
        <member name="T:EzCoding.Drawing.Drawing2D.ImageResizer">
            <summary>
            控制圖片大小的執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.#ctor">
            <summary>
            初始化 EzCoding.Drawing.ImageResizer 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.Dispose">
            <summary>
            執行與釋放（Free）、釋放（Release）或重設 Unmanaged 資源相關聯之應用程式定義的工作。
            </summary>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 表示只釋放 Unmanaged 資源。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.Finalize">
            <summary>
            解構 EzCoding.Drawing.ImageResizer 類別的執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.IO.Stream,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.Drawing.Image)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.Drawing.Image,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.IO.Stream,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.String)">
            <summary>
            依指定的縮放比例縮放小圖片。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByRatio(System.Single,System.String,System.String,System.IO.Stream)">
            <summary>
            依指定的縮放比例縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="ratio">縮放比例。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.Drawing.Image,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.IO.Stream,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.IO.Stream,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.String,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.Drawing.Imaging.ImageFormat,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.Drawing.Image,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.Drawing.Image,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.IO.Stream,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.IO.Stream,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.String,EzCoding.Drawing.Drawing2D.ImageResizeMode)">
            <summary>
            依指定的區域等比縮小圖片。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageInArea(System.Int32,System.Int32,System.String,System.String,EzCoding.Drawing.Drawing2D.ImageResizeMode,System.IO.Stream)">
            <summary>
            依指定的區域等比縮小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="areaWidth">區域的寛度。</param>
            <param name="areaHeight">區域的高度。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="resizeMode">調整圖片大小的模式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.IO.Stream,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.Drawing.Image)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.Drawing.Image,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.IO.Stream,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.String)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ReduceImageByEdge(System.Int32,EzCoding.Drawing.Drawing2D.RectangleEdge,System.String,System.String,System.IO.Stream)">
            <summary>
            依指定的寛或高等比縮放小圖片。
            支援的副檔名為：.bm、.bmp、.jfif、.jfif-tbnl、.jpe、.jpeg、、.jpg、.gif、.tif、.tiff、.png、.x-png。
            </summary>
            <param name="size">指定的大小。</param>
            <param name="edge">指定的寛或高。</param>
            <param name="extName">圖片的副檔名（含「.」）。可以是原副檔名或指定轉換受支援的副檔名。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.String,System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的寛度。</param>
            <param name="height">指定的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.IO.Stream,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的寛度。</param>
            <param name="height">指定的高度。</param>
            <param name="stream">圖檔的資料流。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的寛度。</param>
            <param name="height">指定的高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.String,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的寛度。</param>
            <param name="height">指定的高度。</param>
            <param name="sourcePath">讀取圖片的來源實體路徑。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.String,System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的圖片寛度。</param>
            <param name="height">指定的圖片高度。</param>
            <param name="savePath">圖片要存放實體路徑。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.ResizeImage(System.Int32,System.Int32,System.Drawing.Image,System.Drawing.Imaging.ImageFormat,System.IO.Stream)">
            <summary>
            依指定的大小縮放圖片。
            </summary>
            <param name="width">指定的圖片寛度。</param>
            <param name="height">指定的圖片高度。</param>
            <param name="image">封裝的 GDI+ 圖片。</param>
            <param name="format">指定影像的格式。</param>
            <param name="result">圖片要存放資料流。</param>
            <exception cref="T:System.ArgumentNullException">參數 image 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 result 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.GetImageSize(System.IO.Stream)">
            <summary>
            取得圖檔的寛度和高度。
            </summary>
            <param name="stream">圖檔的資料流。</param>
            <returns>EzCoding.Drawing.Drawing2D.RectangleSize。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.IsSupportedImageMimeType(System.String)">
            <summary>
            檢查傳入的檔案 MIME 內容類型是否為 ImageResizer 類別所支援。
            </summary>
            <param name="mimeType">傳入的檔案 MIME 內容類型。</param>
            <returns>若受支援則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.ImageResizer.GetImageFormat(System.String)">
            <summary>
            依檔案副檔名（含「.」）取得影像的檔案格式。若為 ImageResizer 類別所支援
            </summary>
            <param name="extName">檔案副檔名。</param>
            <returns>若為 ImageResizer 類別所支援則傳回 System.Drawing.Imaging.ImageFormat；否則傳回預設值 Bmp。</returns>
        </member>
        <member name="T:EzCoding.ChineseNumeralFormat">
            <summary>
            中文數值格式。
            </summary>
        </member>
        <member name="F:EzCoding.ChineseNumeralFormat.Formal">
            <summary>
            正式中文數值格式（「零、壹、貳、參、肆、伍、陸、柒、捌、玖」和「拾、佰、仟、萬、億、兆」）。
            </summary>
        </member>
        <member name="F:EzCoding.ChineseNumeralFormat.Informal">
            <summary>
            非正式中文數值格式（「○、一、二、三、四、五、六、七、八、九」和「十、百、千、萬、億、兆」）。
            </summary>
        </member>
        <member name="T:EzCoding.ConvertLib">
            <summary>
            轉換函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Int16)">
            <summary>
            將帶正負號的 16 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Int16},System.String)">
            <summary>
            將帶正負號的 16 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.UInt16)">
            <summary>
            將不帶正負號的 16 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.UInt16},System.String)">
            <summary>
            將不帶正負號的 16 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Int32)">
            <summary>
            將帶正負號的 32 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Int32},System.String)">
            <summary>
            將帶正負號的 32 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.UInt32)">
            <summary>
            將不帶正負號的 32 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.UInt32},System.String)">
            <summary>
            將不帶正負號的 32 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Int64)">
            <summary>
            將帶正負號的 64 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Int64},System.String)">
            <summary>
            將帶正負號的 64 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.UInt64)">
            <summary>
            將不帶正負號的 64 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.UInt64},System.String)">
            <summary>
            將不帶正負號的 64 位元整數數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Single)">
            <summary>
            將精準度 7 個數字浮點型別數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Single},System.String)">
            <summary>
            將精準度 7 個數字浮點型別數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Single,System.Int32,System.Boolean)">
            <summary>
            將精準度 7 個數字浮點型別數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 7），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <example>
            float value = 123.456M;
            string result1 = ConvertLib.ToAccounting(value, 2, true);
            //result 為 123.46
            string result2 = ConvertLib.ToAccounting(value, 2, false);
            //result 為 123.45
            </example>
            <returns>會計數值。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 decimals 必須介於 0 至 7 之間。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Single},System.Int32,System.Boolean,System.String)">
            <summary>
            將精準度 7 個數字浮點型別數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 7），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Double)">
            <summary>
            將精準度 15-16 個數字浮點型別數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Double},System.String)">
            <summary>
            將精準度 15-16 個數字浮點型別數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Double,System.Int32,System.Boolean)">
            <summary>
            將精準度 15-16 個數字浮點型別數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 15），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <example>
            double value = 123.456M;
            string result1 = ConvertLib.ToAccounting(value, 2, true);
            //result 為 123.46
            string result2 = ConvertLib.ToAccounting(value, 2, false);
            //result 為 123.45
            </example>
            <returns>會計數值。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 decimals 必須介於 0 至 15 之間。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Double},System.Int32,System.Boolean,System.String)">
            <summary>
            將精準度 15-16 個數字浮點型別數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 15），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Decimal)">
            <summary>
            將精準度 28-29 個數字 decimal 數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Decimal},System.String)">
            <summary>
            將精準度 28-29 個數字 decimal 數值轉換為會計單位數值。
            不做小數截斷四捨五入檢查，保留參數的完整小數長度。
            </summary>
            <param name="value">數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Decimal,System.Int32,System.Boolean)">
            <summary>
            將精準度 28-29 個數字 decimal 數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 28），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <example>
            decimal value = 123.456M;
            string result1 = ConvertLib.ToAccounting(value, 2, true);
            //result 為 123.46
            string result2 = ConvertLib.ToAccounting(value, 2, false);
            //result 為 123.45
            </example>
            <returns>會計數值。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 decimals 必須介於 0 至 28 之間。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.Nullable{System.Decimal},System.Int32,System.Boolean,System.String)">
            <summary>
            將精準度 28-29 個數字 decimal 數值轉換為會計單位數值。
            </summary>
            <param name="value">數值。</param>
            <param name="decimals">返回值的小數位數（介於 0 至 28），若 decimals 大於實際小數長度，則在後方補「0」。</param>
            <param name="isRound">若 decimals 小於實際小數長度時，於截斷處的後一位數值是否四捨五入。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>會計數值。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToAccounting(System.String)">
            <summary>
            將字串型別數值轉換為會計單位數值。
            </summary>
            <param name="value">數值（1234567890.1234）。</param>
            <returns>會計數值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToChineseNumerals(System.UInt64,EzCoding.ChineseNumeralFormat)">
            <summary>
            將阿拉伯數字轉換為中文數字。
            </summary>
            <param name="arabicNumerals">阿拉伯數字。</param>
            <param name="format">中文數值格式。</param>
            <returns>中文數字。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.AnyToDec(System.String,System.Int32)">
            <summary>
            任何進制表示轉換成十進制表示。
            </summary>
            <param name="number">進制表示值。不得為 Null 或空字串。</param>
            <param name="carryBase">被轉換的基底。</param>
            <returns>十進制表示(長整數)。</returns>
            <exception cref="T:System.ArgumentNullException">參數 number 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 carryBase 必須介於 2 至 36 之間。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.DecToAny(System.Int32,System.Int32)">
            <summary>
            十進制表示轉換成任何進制表示。
            </summary>
            <param name="number">進制表示值。</param>
            <param name="carryBase">要轉換到的基底。</param>
            <returns>轉換後的進制表示。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.BytesToHexString(System.Byte[])">
            <summary>
            依指定的 byte[] 轉換為 16 進制的 System.string。
            </summary>
            <param name="value">要轉換的位元陣列。</param>
            <returns>16 進位組成的字串值。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.HexStringToBytes(System.String)">
            <summary>
            依指定的 16 進制的 System.string 轉換為 byte[]。
            </summary>
            <param name="value">要轉換的 16 進制字串。</param>
            <returns>16 進位組成的字串值。</returns>
            <exception cref="T:System.ArgumentNullException">參數 hexString 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBase64Encoding(System.String)">
            <summary>
            轉換為 Base64 字符所組成的字串表示。預設將 Encoding 屬性設定為 UTF8。
            </summary>
            <param name="value">要編碼的字串。</param>
            <returns>Base64 字符所組成的字串表示。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBase64Encoding(System.String,System.Text.Encoding)">
            <summary>
            轉換為 Base64 字符所組成的字串表示。
            </summary>
            <param name="value">要編碼的字串。</param>
            <param name="encoding">字元編碼的方式。</param>
            <returns>Base64 字符所組成的字串表示。</returns>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBase64Decoding(System.String)">
            <summary>
            將指定的 Base64 字符所組成的字串解碼。預設將 Encoding 屬性設定為 UTF8。
            </summary>
            <param name="value">要解碼的 Base64 字符所組成的字串。</param>
            <returns>解碼後的 Base64 字符所組成的字串。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBase64Decoding(System.String,System.Text.Encoding)">
            <summary>
            將指定的 Base64 字符所組成的字串解碼。
            </summary>
            <param name="value">要解碼的 Base64 字符所組成的字串。</param>
            <param name="encoding">字元編碼的方式。</param>
            <returns>Base64 字符所組成的字串表示。</returns>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.Serialize(System.Object)">
            <summary>
            將指定的 object 序列化至 MemoryStream。
            </summary>
            <param name="source">要序列化的 object。</param>
            <returns>序列化後的資料流。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.Deserialize(System.IO.Stream)">
            <summary>
            將指定的資料流還原序列化至物件。
            </summary>
            <param name="stream">物件資料流。</param>
            <returns>還原後的物件。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.TraditionalToSimplified(System.String)">
            <summary>
            將指定的繁體中文轉換為相對的簡體中文。
            </summary>
            <param name="value">繁體中文。</param>
            <returns>相對的簡體中文。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.SimplifiedToTraditional(System.String)">
            <summary>
            將指定的簡體中文轉換為相對的繁體中文。
            </summary>
            <param name="value">簡體中文。</param>
            <returns>相對的繁體中文。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSId(EzCoding.ISystemId,System.String)">
            <summary>
            依指定的 value 取得轉換後的 EzCoding.SystemId。
            </summary>
            <param name="baseId">實作 Ezcoding.ISystemId 介面要用來執行驗證的執行個體。</param>
            <param name="value">要轉換的系統代號字串。</param>
            <returns>轉換後的 EzCoding.SystemId。若 value 不為符合 SystemId 的格式則回傳 null。</returns>
            <exception cref="T:System.ArgumentNullException">參數 baseId 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSId(System.String)">
            <summary> 
            依指定的 value 取得轉換後的 EzCoding.ISystemId。 
            </summary> 
            <param name="value">要轉換的系統代號字串。</param> 
            <returns>轉換後的 EzCoding.ISystemId。若 value 不為符合 SystemId 的格式則回傳 null。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToSIds(System.String[])">
            <summary> 
            依指定的 systemIds 取得轉換後的 EzCoding.ISystemId 陣列集合（只會加入合法格式）。 
            </summary> 
            <param name="systemIds">要轉換並加入 EzCoding.ISystemId 陣列的系統代號字串。</param> 
            <returns>轉換後的 EzCoding.ISystemId 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToSIds(EzCoding.ISystemId[])">
            <summary> 
            依指定的 systemIds 取得轉換後的 EzCoding.ISystemId 陣列集合（只會加入合法格式）。 
            </summary> 
            <param name="systemIds">要加入 EzCoding.ISystemId 陣列的 EzCoding.ISystemId。</param> 
            <returns>轉換後的 EzCoding.ISystemId 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(EzCoding.ISystemId)">
            <summary>
            將系統代號轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(EzCoding.ISystemId,System.String)">
            <summary>
            將系統代號轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(EzCoding.ISystemId,EzCoding.ISystemId,System.String)">
            <summary>
            將系統代號轉換為字串。
            </summary>
            <param name="baseId">實作 Ezcoding.ISystemId 介面要用來執行驗證的執行個體。</param>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.String,System.String)">
            <summary>
            字串轉換。
            僅針對 null 或 empty，不包含連續空格。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int16})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int16},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int32})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int32},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int64})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Int64},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Decimal})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Decimal},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Double})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Double},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Single})">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.Single},System.String)">
            <summary>
            將數值轉換為字串。
            </summary>
            <param name="val">值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStr(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            將 DateTime? 轉換為字串。
            </summary>
            <param name="dt">日期時間。</param>
            <param name="falseValue">當日期時間為 null 時所替代的文字。</param>
            <param name="format">DateTime 格式字串。若為 null 或 empty 則使用預設的格式化字串。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToStrs(System.Object[])">
            <summary> 
            依指定的 values 取得轉換後的字串陣列集合。 
            預設移除 null 或 empty。
            </summary> 
            <param name="values">要轉換並加入字串陣列的值。</param> 
            <returns>轉換後的字串陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToStrs(System.Boolean,System.Object[])">
            <summary> 
            依指定的 values 取得轉換後的字串陣列集合。 
            </summary> 
            <param name="removeEmptyEntries">是否移除 null 或 empty。</param>
            <param name="values">要轉換並加入字串陣列的值。</param> 
            <returns>轉換後的字串陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToStrs(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的字串陣列集合。
            預設移除 null 或 empty。
            </summary> 
            <param name="values">要轉換並加入字串陣列的值。</param> 
            <returns>轉換後的字串陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToStrs(System.Boolean,System.String[])">
            <summary> 
            依指定的 values 取得轉換後的字串陣列集合。 
            </summary> 
            <param name="removeEmptyEntries">是否移除 null 或 empty。</param>
            <param name="values">要轉換並加入字串陣列的值。</param> 
            <returns>轉換後的字串陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToBoolean(System.String)">
            <summary>
            依指定的 value 取得轉換後的 Boolean。
            </summary>
            <param name="value">要轉換的布林值字串。包含「true/false」、「Y/N」、「1/0」，不區分大小寫。</param>
            <returns>轉換後的 Boolean。若 value 不為布林值格式則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBoolean(System.String,System.Boolean)">
            <summary>
            依指定的 value 取得轉換後的 Boolean。
            </summary>
            <param name="value">要轉換的布林值字串。包含「true/false」、「Y/N」、「1/0」，不區分大小寫。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Boolean。若 value 不為布林值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBoolean(System.String,System.Nullable{System.Boolean})">
            <summary>
            依指定的 value 取得轉換後的 Boolean。
            </summary>
            <param name="value">要轉換的布林值字串。包含「true/false」、「Y/N」、「1/0」，不區分大小寫。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Boolean。若 value 不為布林值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToBoolean(System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            依指定的 value 取得轉換後的 Boolean。
            </summary>
            <param name="value">要轉換的布林值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Boolean。若 value 不為布林值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSupportedNumeric(System.String)">
            <summary>
            轉換為被支援的數值字串
            for 字串轉數值型別轉換時使用。
            </summary>
            <param name="value">數值字串。</param>
        </member>
        <member name="M:EzCoding.ConvertLib.ToShort(System.String,System.Int16)">
            <summary>
            依指定的 value 取得轉換後的 Int16。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int16。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToShort(System.String,System.Nullable{System.Int16})">
            <summary>
            依指定的 value 取得轉換後的 Int16。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int16。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToShort(System.Nullable{System.Int16},System.Int16)">
            <summary>
            依指定的 value 取得轉換後的 Int16。
            </summary>
            <param name="value">要轉換的數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int16。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToShorts(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Int16 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int16 陣列的值。</param> 
            <returns>轉換後的 Int16 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToShorts(System.Int16[])">
            <summary> 
            依指定的 values 取得轉換後的 Int16 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int16 陣列的值。</param> 
            <returns>轉換後的 Int16 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToShorts(System.Nullable{System.Int16}[])">
            <summary> 
            依指定的 values 取得轉換後的 Int16 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int16 陣列的值。</param> 
            <returns>轉換後的 Int16 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToInt(System.String,System.Int32)">
            <summary>
            依指定的 value 取得轉換後的 Int32。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int32。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToInt(System.String,System.Nullable{System.Int32})">
            <summary>
            依指定的 value 取得轉換後的 Int32。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int32。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToInt(System.Nullable{System.Int32},System.Int32)">
            <summary>
            依指定的 value 取得轉換後的 Int32。
            </summary>
            <param name="value">要轉換的數值。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int32。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToInts(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Int32 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int32 陣列的值。</param> 
            <returns>轉換後的 Int32 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToInts(System.Int32[])">
            <summary> 
            依指定的 values 取得轉換後的 Int32 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int32 陣列的值。</param> 
            <returns>轉換後的 Int32 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToInts(System.Nullable{System.Int32}[])">
            <summary> 
            依指定的 values 取得轉換後的 Int32 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int32 陣列的值。</param> 
            <returns>轉換後的 Int32 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToLong(System.String,System.Int64)">
            <summary>
            依指定的 value 取得轉換後的 Int64。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int64。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToLong(System.String,System.Nullable{System.Int64})">
            <summary>
            依指定的 value 取得轉換後的 Int64。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int64。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToLong(System.Nullable{System.Int64},System.Int64)">
            <summary>
            依指定的 value 取得轉換後的 Int64。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Int64。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToLongs(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Int64 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int64 陣列的值。</param> 
            <returns>轉換後的 Int64 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToLongs(System.Int64[])">
            <summary> 
            依指定的 values 取得轉換後的 Int64 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int64 陣列的值。</param> 
            <returns>轉換後的 Int64 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToLongs(System.Nullable{System.Int64}[])">
            <summary> 
            依指定的 values 取得轉換後的 Int64 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Int64 陣列的值。</param> 
            <returns>轉換後的 Int64 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimal(System.String,System.Decimal)">
            <summary>
            依指定的 value 取得轉換後的 Decimal。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Decimal。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimal(System.String,System.Nullable{System.Decimal})">
            <summary>
            依指定的 value 取得轉換後的 Decimal。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Decimal。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimal(System.Nullable{System.Decimal},System.Decimal)">
            <summary>
            依指定的 value 取得轉換後的 Decimal。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Decimal。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimals(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Decimal 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Decimal 陣列的值。</param> 
            <returns>轉換後的 Decimal 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimals(System.Decimal[])">
            <summary> 
            依指定的 values 取得轉換後的 Decimal 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Decimal 陣列的值。</param> 
            <returns>轉換後的 Decimal 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDecimals(System.Nullable{System.Decimal}[])">
            <summary> 
            依指定的 values 取得轉換後的 Decimal 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Decimal 陣列的值。</param> 
            <returns>轉換後的 Decimal 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDouble(System.String,System.Double)">
            <summary>
            依指定的 value 取得轉換後的 Double。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Double。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDouble(System.String,System.Nullable{System.Double})">
            <summary>
            依指定的 value 取得轉換後的 Double。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Double。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDouble(System.Nullable{System.Double},System.Double)">
            <summary>
            依指定的 value 取得轉換後的 Double。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Double。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDoubles(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Double 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Double 陣列的值。</param> 
            <returns>轉換後的 Double 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDoubles(System.Double[])">
            <summary> 
            依指定的 values 取得轉換後的 Double 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Double 陣列的值。</param> 
            <returns>轉換後的 Double 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDoubles(System.Nullable{System.Double}[])">
            <summary> 
            依指定的 values 取得轉換後的 Double 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Double 陣列的值。</param> 
            <returns>轉換後的 Double 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingle(System.String,System.Single)">
            <summary>
            依指定的 value 取得轉換後的 Single。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Single。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingle(System.String,System.Nullable{System.Single})">
            <summary>
            依指定的 value 取得轉換後的 Single。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Single。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingle(System.Nullable{System.Single},System.Single)">
            <summary>
            依指定的 value 取得轉換後的 Single。
            </summary>
            <param name="value">要轉換的數值字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 Single。若 value 不為數值格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingles(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 Single 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Single 陣列的值。</param> 
            <returns>轉換後的 Single 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingles(System.Single[])">
            <summary> 
            依指定的 values 取得轉換後的 Single 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Single 陣列的值。</param> 
            <returns>轉換後的 Single 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToSingles(System.Nullable{System.Single}[])">
            <summary> 
            依指定的 values 取得轉換後的 Single 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 Single 陣列的值。</param> 
            <returns>轉換後的 Single 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTime(System.String,System.DateTime)">
            <summary>
            依指定的 value 取得轉換後的 DateTime。
            </summary>
            <param name="value">要轉換的日期時間字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 DateTime。若 value 不為日期時間字串則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            依指定的 value 取得轉換後的 DateTime。
            </summary>
            <param name="value">要轉換的日期時間字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 DateTime。若 value 不為日期時間字串則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTime(System.Nullable{System.DateTime},System.DateTime)">
            <summary>
            依指定的 value 取得轉換後的 DateTime。
            </summary>
            <param name="value">要轉換的日期時間。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 DateTime。若 value 不為日期時間字串則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTimes(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 DateTime 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 DateTime 陣列的值。</param> 
            <returns>轉換後的 DateTime 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTimes(System.DateTime[])">
            <summary> 
            依指定的 values 取得轉換後的 DateTime 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 DateTime 陣列的值。</param> 
            <returns>轉換後的 DateTime 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDateTimes(System.Nullable{System.DateTime}[])">
            <summary> 
            依指定的 values 取得轉換後的 DateTime 陣列集合。 
            </summary> 
            <param name="values">要轉換並加入 DateTime 陣列的值。</param> 
            <returns>轉換後的 DateTime 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTime(System.String,System.DateTime)">
            <summary>
            依指定的 value 取得轉換後的 DateTime。
            </summary>
            <param name="value">要轉換的未格式化日期時間字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 DateTime。若 value 不為未格式化日期時間字串則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            依指定的 value 取得轉換後的 DateTime。
            </summary>
            <param name="value">要轉換的未格式化日期時間字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的 DateTime。若 value 不為未格式化日期時間字串則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTimes(System.String[])">
            <summary> 
            依指定的 values 取得轉換後的 DateTime 陣列集合。 
            </summary> 
            <param name="values">要轉換的未格式化日期時間字串。</param> 
            <returns>轉換後的 DateTime 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTimeFormat(System.String)">
            <summary>
            依指定的 value 取得轉換後格式化的 DateTime。
            </summary>
            <param name="value">要轉換的未格式化日期時間字串。</param>
            <returns>轉換後的格式化日期時間格式。若 value 不為「133010」或「20050112」或「20050112121030」三種格式則回傳 empey。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTimeFormat(System.String,System.String)">
            <summary>
            依指定的 value 取得轉換後格式化的 DateTime。
            </summary>
            <param name="value">要轉換的未格式化日期時間字串。</param>
            <param name="falseValue">轉換失敗時的傳回值。</param>
            <returns>轉換後的格式化日期時間格式。若 value 不為「133010」或「20050112」或「20050112121030」三種格式則回傳 falseValue。</returns>
        </member>
        <member name="M:EzCoding.ConvertLib.UnformattedToDateTimeFormats(System.String[])">
            <summary> 
            依指定的 values 取得轉換後格式化的 DateTime 陣列集合。 
            </summary> 
            <param name="values">要轉換的未格式化日期時間字串。</param> 
            <returns>取得轉換後格式化的 DateTime 陣列。</returns> 
        </member>
        <member name="M:EzCoding.ConvertLib.ToDefaultEmpty(System.Object)">
            <summary>
            將物件中 null 的 System.String 值全部設為空字串。
            </summary>
        </member>
        <member name="M:EzCoding.ConvertLib.ToDefaultEmpty``1(``0)">
            <summary>
            將物件中 null 的 System.String 值全部設為空字串。
            </summary>
        </member>
        <member name="T:EzCoding.XmlLib">
            <summary>
            XML 函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.XmlLib.#ctor">
            <summary>
            初始化 EzCoding.Data.XmlLib 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.XmlLib.#ctor(System.Xml.XmlDocument)">
            <summary>
            初始化 EzCoding.Data.XmlLib 類別的新執行個體。
            </summary>
            <param name="xmldoc">System.Xml.XmlDocument。</param>
        </member>
        <member name="M:EzCoding.XmlLib.#ctor(System.Text.Encoding)">
            <summary>
            初始化 EzCoding.Data.XmlLib 類別的新執行個體。並加入 XML 的聲明段落。
            </summary>
            <param name="encoding">System.Text.Encoding。</param>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlNode,System.String)">
            <summary>
            建立節點。
            </summary>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="nodeName">具有指定名稱子節點。</param>
            <returns>System.Xml.XmlNode。</returns>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            建立節點。
            </summary>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="nodeName">具有指定名稱子節點。</param>
            <param name="cdata">XmlCDataSection 的內容。</param>
            <returns>System.Xml.XmlNode。</returns>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)">
            <summary>
            建立節點。
            </summary>
            <param name="xmldoc">XML 的文件主體。</param>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="nodeName">具有指定名稱子節點。</param>
            <returns>System.Xml.XmlNode。</returns>
            <exception cref="T:System.ArgumentNullException">參數 xmldoc 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            建立節點。
            </summary>
            <param name="xmldoc">XML 的文件主體。</param>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="nodeName">具有指定名稱子節點。</param>
            <param name="cdata">XmlCDataSection 的內容。</param>
            <returns>System.Xml.XmlNode。</returns>
            <exception cref="T:System.ArgumentNullException">參數 xmldoc 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlNode,EzCoding.Collections.SimpleDataSet{System.String,System.String})">
            <summary>
            建立一系列不含屬性的節點。
            </summary>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="list">一系列的節點集合。</param>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 list 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateNode(System.Xml.XmlDocument,System.Xml.XmlNode,EzCoding.Collections.SimpleDataSet{System.String,System.String})">
            <summary>
            建立一系列不含屬性的節點。
            </summary>
            <param name="xmldoc">XML 的文件主體。</param>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="list">一系列的節點集合。</param>
            <exception cref="T:System.ArgumentNullException">參數 xmldoc 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 list 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateElement(System.String)">
            <summary>
            建立具有指定名稱的項目。
            </summary>
            <param name="name">項目的限定名稱。如果名稱包含冒號，Prefix 屬性會反映冒號之前的名稱部分，LocalName 屬性會反映冒號之後的名稱部分。限定名稱不能包含 'xmlns' 前置詞。</param>
            <returns>建立的 System.Xml.XmlElement。</returns>
        </member>
        <member name="M:EzCoding.XmlLib.CreateElement(System.Xml.XmlNode,System.String)">
            <summary>
            建立具有指定名稱的項目。
            </summary>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="name">項目的限定名稱。如果名稱包含冒號，Prefix 屬性會反映冒號之前的名稱部分，LocalName 屬性會反映冒號之後的名稱部分。限定名稱不能包含 'xmlns' 前置詞。</param>
            <returns>建立的 System.Xml.XmlElement。</returns>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.CreateElement(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            建立具有指定名稱的項目。
            </summary>
            <param name="parent">子節點所要依附的父節點。</param>
            <param name="name">項目的限定名稱。如果名稱包含冒號，Prefix 屬性會反映冒號之前的名稱部分，LocalName 屬性會反映冒號之後的名稱部分。限定名稱不能包含 'xmlns' 前置詞。</param>
            <param name="cdata">XmlCDataSection 的內容。</param>
            <returns>建立的 System.Xml.XmlElement。</returns>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.GetAttributeValue(System.Xml.XmlNode,System.String)">
            <summary>
            取得指定節點的屬性值。
            </summary>
            <param name="node">System.Xml.XmlNode</param>
            <param name="attributeName">屬性名稱。</param>
            <exception cref="T:System.ArgumentNullException">參數 node 不允許為 null 值。</exception>
            <returns>若指定節點不存在於該屬性則回傳 null；否則回傳該屬性的屬性值。</returns>
        </member>
        <member name="M:EzCoding.XmlLib.ImportNode(System.Xml.XmlNode,System.Boolean)">
            <summary>
            從其他文件匯入節點至目前的文件。
            </summary>
            <param name="node">匯入的節點。</param>
            <param name="deep">true 以執行深層複製，否則為 false。</param>
            <exception cref="T:System.ArgumentNullException">參數 node 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.XmlLib.ImportNode(System.Xml.XmlNode,System.Xml.XmlNode,System.Boolean)">
            <summary>
            從其他文件匯入節點至指定的父節點。
            </summary>
            <param name="parent">匯入的節點所要依附的父節點。</param>
            <param name="node">匯入的節點。</param>
            <param name="deep">true 以執行深層複製，否則為 false。</param>
            <exception cref="T:System.ArgumentNullException">參數 parent 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 node 不允許為 null 值。</exception>
        </member>
        <member name="P:EzCoding.XmlLib.XmlDocument">
            <summary>
            取得 XML 的文件主體。
            </summary>
        </member>
        <member name="T:EzCoding.MessageTable">
            <summary>
            適用用於 EzCoding 函式庫各種訊息表示的常數結構。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.SystemIdFormatException">
            <summary>
            System ID格式錯誤。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.NotContainsInquireConditions">
            <summary>
            未含有指定的查詢條件。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.NotContainsAssignedColumnName">
            <summary>
            未含有指定的欄位名稱（通常發生在 DataSet）。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.NullException">
            <summary>
            使用了 Null 值。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.NotContainsData">
            <summary>
            未含有任何的資料。
            </summary>
        </member>
        <member name="F:EzCoding.MessageTable.OtherException">
            <summary>
            其他不在預期內的錯誤原因。
            </summary>
        </member>
        <member name="M:EzCoding.MessageTable.#ctor">
            <summary>
            不初始化 EzCoding.MessageTable 類別的新執行個體。
            </summary>
        </member>
        <member name="T:EzCoding.LeftRightPair`2">
            <summary>
            提供用來儲存一組左右相對應的內容。
            </summary>
        </member>
        <member name="M:EzCoding.LeftRightPair`2.#ctor(`0,`1)">
            <summary>
            依指定的左右內容，初始化 EzCoding.LeftRightPair 類別的新執行個體。
            </summary>
            <param name="left">左邊的內容。</param>
            <param name="right">右邊的內容。</param>
        </member>
        <member name="P:EzCoding.LeftRightPair`2.Left">
            <summary>
            取得或設定左邊的內容。
            </summary>
        </member>
        <member name="P:EzCoding.LeftRightPair`2.Right">
            <summary>
            取得或設定右邊的內容。
            </summary>
        </member>
        <member name="P:EzCoding.LeftRightPair`2.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="T:EzCoding.CharacterSetOptions">
            <summary>
            字元集選項。
            這個列舉型別允許將其成員值以位元組合的方式來使用。
            </summary>
        </member>
        <member name="F:EzCoding.CharacterSetOptions.Numbers">
            <summary>
            數字。
            </summary>
        </member>
        <member name="F:EzCoding.CharacterSetOptions.UppercaseLetters">
            <summary>
            大寫英文字母。
            </summary>
        </member>
        <member name="F:EzCoding.CharacterSetOptions.LowercaseLetters">
            <summary>
            小寫英文字母。
            </summary>
        </member>
        <member name="F:EzCoding.CharacterSetOptions.Symbol">
            <summary>
            符號（!@#$%^&amp;*()_+-=[]\;',./{}|:&quot;&lt;&gt;?）。
            </summary>
        </member>
        <member name="T:EzCoding.MathOperator">
            <summary>
            數學中使用的運算符號列舉。
            </summary>
        </member>
        <member name="F:EzCoding.MathOperator.Plus">
            <summary>
            加。
            </summary>
        </member>
        <member name="F:EzCoding.MathOperator.Minus">
            <summary>
            減。
            </summary>
        </member>
        <member name="F:EzCoding.MathOperator.Multiply">
            <summary>
            乘。
            </summary>
        </member>
        <member name="F:EzCoding.MathOperator.Divide">
            <summary>
            除。
            </summary>
        </member>
        <member name="T:EzCoding.ActabilityStatus">
            <summary>
            行為作用的狀態列舉。
            </summary>
        </member>
        <member name="F:EzCoding.ActabilityStatus.Enable">
            <summary>
            啟用。
            </summary>
        </member>
        <member name="F:EzCoding.ActabilityStatus.Disable">
            <summary>
            停用。
            </summary>
        </member>
        <member name="T:EzCoding.DataTableMaker">
            <summary>
            用來快速建立 System.Data.DataTable 的類別。
            </summary>
        </member>
        <member name="M:EzCoding.DataTableMaker.#ctor">
            <summary>
            初始化 EzCoding.DataTableMaker 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.DataTableMaker.#ctor(System.String)">
            <summary>
            依指定的 DataTable 名稱，初始化 EzCoding.DataTableMaker 類別的新執行個體。
            </summary>
            <param name="tableName">DataTable名稱。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.#ctor(System.Data.DataTable)">
            <summary>
            依指定的 System.Data.DataTable，初始化 EzCoding.DataTableMaker 類別的新執行個體。
            </summary>
            <param name="dataTable">System.Data.DataTable。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.Dispose">
            <summary>
            執行與釋放（Free）、釋放（Release）或重設 Unmanaged 資源相關聯之應用程式定義的工作。
            </summary>
        </member>
        <member name="M:EzCoding.DataTableMaker.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 表示只釋放 Unmanaged 資源。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.Finalize">
            <summary>
            解構 EzCoding.DataTableMaker 類別的執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.DataTableMaker.AddColumnsValue(System.Object[])">
            <summary>
            使用指定的陣列建立資料列，並加它加入 System.Data.DataRowCollection。
            </summary>
            <param name="values">用來建立新資料列之值的陣列。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.AddColumnsValue(System.Data.DataRow)">
            <summary>
            使用指定的 System.Data.DataRow 建立資料列，並加它加入 System.Data.DataRowCollection。
            </summary>
            <param name="row">System.Data.DataRow。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.AddDataColumn(System.String)">
            <summary>
            使用指定的欄位名稱建立 System.Data.DataColumn 物件，並將它加入 System.Data.DataColumnCollection。
            </summary>
            <param name="columnName">欄位名稱。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.AddDataColumn(System.Data.DataColumn)">
            <summary>
            使用指定的 System.Data.DataColumn，並將它加入 System.Data.DataColumnCollection。
            </summary>
            <param name="column">System.Data.DataColumn。</param>
        </member>
        <member name="M:EzCoding.DataTableMaker.AddDataColumns(System.String[],System.Data.DataTable)">
            <summary>
            依指定的 newColumns 欄位名稱字串陣列，將欄位新增至 System.Data.DataTable 中。
            若遇重複的欄位名稱將自動略過。
            </summary>
            <param name="newColumns">要新增的欄位名稱陣列。</param>
            <param name="dTable">欲操作的 DataTable。</param>
            <exception cref="T:System.ArgumentNullException">參數 dTable 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.DataTableMaker.ToArray(System.Data.DataColumnCollection)">
            <summary>
            將 System.Data.DataColumnCollection 物件集合轉換成字串陣列。
            </summary>
            <param name="columns">System.Data.DataColumnCollection 物件集合。</param>
            <returns>Column 字串陣列。</returns>
            <exception cref="T:System.ArgumentNullException">參數 columns 不允許為 null 值。</exception>
        </member>
        <member name="P:EzCoding.DataTableMaker.DataTable">
            <summary>
            取得 System.Data.DataTable。
            </summary>
        </member>
        <member name="T:EzCoding.TelFormater">
            <summary>
            市話格式化物件。
            </summary>
        </member>
        <member name="M:EzCoding.TelFormater.#ctor(System.String)">
            <summary>
            初始化 EzCoding.TelFormater 類別的新執行個體。
            </summary>
            <param name="phoneNumber">符合「區域號碼-電話號碼」、「區域號碼-電話號碼#分機號碼」或「電話號碼#分機號碼」格式的電話號碼。</param>
        </member>
        <member name="M:EzCoding.TelFormater.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化 EzCoding.TelFormater 類別的新執行個體。
            </summary>
            <param name="areaCode">電話區碼。</param>
            <param name="number">電話號碼。</param>
            <param name="extension">電話分機號碼。</param>
        </member>
        <member name="M:EzCoding.TelFormater.ParsingTelephoneFormat(System.String)">
            <summary>
            分析電話格式並傳回含有三個字串索引的陣列。
            電話格式為「區域號碼-電話號碼」、「區域號碼-電話號碼#分機號碼」或「電話號碼#分機號碼」。
            </summary>
            <param name="phoneNumber">符合「區域號碼-電話號碼」、「區域號碼-電話號碼#分機號碼」或「電話號碼#分機號碼」格式的電話號碼。</param>
        </member>
        <member name="M:EzCoding.TelFormater.ToString">
            <summary>
            傳回目前執行個體的完整的電話號碼字串。
            </summary>
            <returns>完整的電話號碼字串。</returns>
        </member>
        <member name="P:EzCoding.TelFormater.AreaCode">
            <summary>
            電話區碼。
            </summary>
        </member>
        <member name="P:EzCoding.TelFormater.Number">
            <summary>
            電話號碼。
            </summary>
        </member>
        <member name="P:EzCoding.TelFormater.Extension">
            <summary>
            電話分機號碼。
            </summary>
        </member>
        <member name="T:EzCoding.Security.Cryptography.TripleDESLib">
            <summary>
            自訂三重資料加密函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.#ctor(System.String,System.String)">
            <summary>
            初始化 EzCoding.Security.Cryptography.TripleDESLib 類別的新執行個體。
            </summary>
            <param name="key">對稱演算法的私有金錀。</param>
            <param name="iv">對稱演算法的初始化向量。</param>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            初始化 EzCoding.Security.Cryptography.TripleDESLib 類別的新執行個體。
            </summary>
            <param name="key">對稱演算法的私有金錀。</param>
            <param name="iv">對稱演算法的初始化向量。</param>
            <param name="encoding">字元編碼的方式。</param>
            <exception cref="T:System.ArgumentNullException">參數 key 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 iv 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 encoding 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Dispose">
            <summary>
            執行與釋放（Free）、釋放（Release）或重設 Unmanaged 資源相關聯之應用程式定義的工作。
            </summary>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 表示只釋放 Unmanaged 資源。</param>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Finalize">
            <summary>
            解構 EzCoding.Security.Cryptography.TripleDESLib 類別的執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Encrypt(System.String)">
            <summary>
            取得經過三重資料加密處理後的字串。
            </summary>
            <param name="value">需要加密的字串。</param>
            <returns>經過三重資料加密處理後的字串。</returns>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Encrypt(System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
            <summary>
            取得經過三重資料加密處理後的字串。
            </summary>
            <param name="value">需要加密的字串。</param>
            <param name="mode">對稱演算法的作業模式。</param>
            <param name="padding">對稱演算法的填補模式。</param>
            <returns>經過三重資料加密處理後的字串。</returns>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Decrypt(System.String)">
            <summary>
            取得經過三重資料解密處理後的字串。預設編碼設定為 UTF8。
            </summary>
            <param name="value">需要解密的字串。</param>
            <returns>經過三重資料解密處理後的字串。</returns>
        </member>
        <member name="M:EzCoding.Security.Cryptography.TripleDESLib.Decrypt(System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
            <summary>
            取得經過三重資料解密處理後的字串。預設編碼設定為 UTF8。
            </summary>
            <param name="value">需要解密的字串。</param>
            <param name="mode">對稱演算法的作業模式。</param>
            <param name="padding">對稱演算法的填補模式。</param>
            <returns>經過三重資料解密處理後的字串。</returns>
        </member>
        <member name="T:EzCoding.LibraryException">
            <summary>
            函式庫執行時期的例外時，所擲回的例外狀況（Exception）。
            </summary>
        </member>
        <member name="M:EzCoding.LibraryException.#ctor">
            <summary>
            初始化 EzCoding.LibraryException 類別的新執行個體 (Instance)。
            </summary>
        </member>
        <member name="M:EzCoding.LibraryException.#ctor(System.String)">
            <summary>
            使用指定的錯誤訊息來初始化 EzCoding.LibraryException 類別的新執行個體。
            </summary>
            <param name="message">描述錯誤的訊息。</param>
        </member>
        <member name="M:EzCoding.LibraryException.#ctor(System.String,System.String)">
            <summary>
            使用指定的訊息代碼及錯誤訊息來初始化 EzCoding.LibraryException 類別的新執行個體。
            </summary>
            <param name="code">自訂的例外訊息代碼。</param>
            <param name="message">描述錯誤的訊息。</param>
        </member>
        <member name="M:EzCoding.LibraryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用序列資料來初始化 EzCoding.LibraryException 類別的新執行個體。
            </summary>
            <param name="info">存放序列物件資料的物件。</param>
            <param name="context">關於來源或目的端的內容資訊。</param>
        </member>
        <member name="M:EzCoding.LibraryException.#ctor(System.String,System.Exception)">
            <summary>
            用指定的錯誤訊息和造成這個例外狀況原因的內部例外參考，初始化 EzCoding.LibraryException 類別的新執行個體。
            </summary>
            <param name="message">解釋例外狀況原因的錯誤訊息。</param>
            <param name="innerException">是目前例外狀況原因的例外狀況。如果 innerException 參數不是 Null 參考，則會在處理內部例外狀況的 catch 區塊中引發目前的例外狀況。</param>
        </member>
        <member name="M:EzCoding.LibraryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用序列資料來記錄 EzCoding.LibraryException 類別的新執行個體。
            </summary>
            <param name="info">存放序列物件資料的物件。</param>
            <param name="context">關於來源或目的端的內容資訊。</param>
        </member>
        <member name="P:EzCoding.LibraryException.Code">
            <summary>
            自訂的例外訊息代碼。
            </summary>
        </member>
        <member name="P:EzCoding.LibraryException.FullMessage">
            <summary>
            取得完整的訊息。
            </summary>
            <returns>完整的訊息。</returns>
        </member>
        <member name="T:EzCoding.ReturnType">
            <summary>
            回傳的資料型別。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.SId">
            <summary>
            系統代號。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.SIds">
            <summary>
            以逗號分隔的系統代號陣列集合。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Bool">
            <summary>
            布林值。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Short">
            <summary>
            16 位元帶正負號的整數。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Int">
            <summary>
            32 位元帶正負號的整數。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Long">
            <summary>
            64 位元帶正負號的整數。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Float">
            <summary>
            單精準浮點數。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Decimal">
            <summary>
            十進位數字。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.DateTime">
            <summary>
            連續字元的日期時間。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.DateTimeFormat">
            <summary>
            格式化的日期時間。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.String">
            <summary>
            字串。
            </summary>
        </member>
        <member name="F:EzCoding.ReturnType.Strings">
            <summary>
            以逗號分隔的字串陣列集合。
            </summary>
        </member>
        <member name="T:EzCoding.AlignPosition">
            <summary>
            排列位置。
            </summary>
        </member>
        <member name="F:EzCoding.AlignPosition.Left">
            <summary>
            向左靠齊。
            </summary>
        </member>
        <member name="F:EzCoding.AlignPosition.Center">
            <summary>
            置中靠齊。
            </summary>
        </member>
        <member name="F:EzCoding.AlignPosition.Right">
            <summary>
            向右靠齊。
            </summary>
        </member>
        <member name="T:EzCoding.Drawing.Drawing2D.RectangleEdge">
            <summary>
            指定的矩形邊。
            </summary>
        </member>
        <member name="F:EzCoding.Drawing.Drawing2D.RectangleEdge.Width">
            <summary>
            矩形寛。
            </summary>
        </member>
        <member name="F:EzCoding.Drawing.Drawing2D.RectangleEdge.Height">
            <summary>
            矩形高。
            </summary>
        </member>
        <member name="T:EzCoding.DefVal">
            <summary>
            預設值常數定義。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Str">
            <summary>
            Null 的 string。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Strs">
            <summary>
            Null 的字串陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Short">
            <summary>
            Null 的 Int16。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Shorts">
            <summary>
            Null 的 Int16 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Int">
            <summary>
            Null 的 Int32。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Ints">
            <summary>
            Null 的 Int32 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Long">
            <summary>
            Null 的 Int64。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Longs">
            <summary>
            Null 的 Int64 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Float">
            <summary>
            Null 的 Single。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Floats">
            <summary>
            Null 的 Single 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Double">
            <summary>
            Null 的 Double。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Doubles">
            <summary>
            Null 的 Double 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Decimal">
            <summary>
            Null 的 Decimal。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Decimals">
            <summary>
            Null 的 Decimal 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.DT">
            <summary>
            Null 的 DateTime。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.DTs">
            <summary>
            Null 的 DateTime 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Byte">
            <summary>
            Null 的 Byte。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Bytes">
            <summary>
            Null 的 Byte 陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.SId">
            <summary>
            Null 的系統代號。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.SIds">
            <summary>
            Null 的系統代號陣列。
            </summary>
        </member>
        <member name="P:EzCoding.DefVal.Bool">
            <summary>
            Null 的 bool。
            </summary>
        </member>
        <member name="T:EzCoding.DateTimeLibStyle">
            <summary>
            日期時間樣式。
            </summary>
        </member>
        <member name="F:EzCoding.DateTimeLibStyle.General">
            <summary>
            一般（yyyy/MM/dd HH:mm:ss）。
            </summary>
        </member>
        <member name="F:EzCoding.DateTimeLibStyle.Chinese">
            <summary>
            國字（yyyy年MM月dd日HH時mm分ss秒）。
            </summary>
        </member>
        <member name="T:EzCoding.DateTimeLib">
            <summary>
            日期時間函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsDate(System.String)">
            <summary>
            驗證 date 參數是否為「20050112」格式。
            </summary>
            <param name="date">未格式化的日期字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsDateFormat(System.String)">
            <summary>
            驗證 date 參數是否為符合日期表示的格式（e.g., 2005/1/12）。
            </summary>
            <param name="date">符合日期表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsTime(System.String)">
            <summary>
            驗證 time 參數是否為「133010」格式。
            </summary>
            <param name="time">未格式化的時間字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsTimeFormat(System.String)">
            <summary>
            驗證 time 參數是否為符合時間表示的格式（e.g., 13:30:10）。
            </summary>
            <param name="time">符合時間表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsDateTime(System.String)">
            <summary>
            驗證 datetime 參數是否為「133010」或「20050112」或「20050112121030」其中一種格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.IsDateTimeFormat(System.String)">
            <summary>
            驗證 datetime 參數是否為符合日期時間表示的格式（e.g., 2005/1/12 13:30:10）。
            </summary>
            <param name="datetime">符合日期時間表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.TryParse(System.String,System.String@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime 字串。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間格式化後的字串值（「13:30:10」或「2005/01/12」或「2005/01/12/ 12:10:30」）；如果轉換失敗，則為 empty。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.TryParse(System.String,System.String,System.IFormatProvider,System.String@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime 字串。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="format">格式字串。</param>
            <param name="provider">IFormatProvider 物件，提供關於 datetime 的文化特性 (Culture) 特定格式資訊。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間格式化後的字串值（依 format 和 provider 參數而定）；如果轉換失敗，則為 empty。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.TryParse(System.String,System.DateTime@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間的 DateTime 值；如果轉換失敗，則為 MinValue。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="provider">IFormatProvider 物件，提供關於 datetime 的文化特性 (Culture) 特定格式資訊。</param>
            <param name="styles">DateTimeStyles 值的位元組合，指出 datetime 的允許格式。一般會指定的值是 None。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間的 DateTime 值；如果轉換失敗，則為 MinValue。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTimeFormat(System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTimeFormat(System.String,System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="format">DateTime 格式字串。若為 null 或 empty 則使用預設的格式化字串。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTimeFormat(System.Object)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，引收僅接受「133010」或「20050112」或「20050112121030」三種格式，且必須為數字格式。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTimeFormat(System.Object,System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，引收僅接受「133010」或「20050112」或「20050112121030」三種格式，且必須為數字格式。</param>
            <param name="format">DateTime 格式字串。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTime(System.String)">
            <summary>
            將未格式化或符合日期時間表示格式的日期時間字串轉換成 System.DateTime。
            預設取得與文化特性無關的（不變的）System.Globalization.CultureInfo。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTime(System.Object)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            預設取得與文化特性無關的（不變的）System.Globalization.CultureInfo。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTime(System.Object,System.IFormatProvider)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="provider">System.IFormatProvider 介面實作，提供特定文化特性的格式資訊。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.ToDateTime(System.String,System.IFormatProvider)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「20050112」或「20050112121030」三種格式。</param>
            <param name="provider">System.IFormatProvider 介面實作，提供特定文化特性的格式資訊。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「20050112」或「20050112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeLib.PassedFullYears(System.DateTime,System.DateTime)">
            <summary>
            計算目前日期距基準日期總共過了多少年。
            此計算是以足年為單位，例如 2000/1/1 到 2000/12/31 為滿一年。
            </summary>
            <param name="baseDate">基準日期。</param>
            <param name="currentDate">目前日期。</param>
            <returns>總共經過的足年。若目前日期小於基準日期，則一律回傳 -1，未滿一年 (2000/1/1 ~ 2000/10/5) 回傳 0，滿一年未滿兩年 (2000/1/1 ~ 2001/2/10) 回傳 1，以此類推。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.GetMonthSpan(System.DateTime,System.DateTime)">
            <summary>
            取得指定的日期起訖共經過了多少月。
            </summary>
            <param name="begin">始始日期。</param>
            <param name="end">結束日期。</param>
            <returns>傳回起訖日期共經過了多少月。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.GetLastDaysInMonth">
            <summary>
            取得本月的最後一天。
            </summary>
            <returns>傳回本月最後一天的 DateTime。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.GetLastDaysInMonth(System.Int32,System.Int32)">
            <summary>
            取得指定年月的最後一天。
            </summary>
            <param name="year">年。</param>
            <param name="month">月（範圍從 1 到 12 的數字）。</param>
            <returns>傳回替定年月最後一天的 DateTime。</returns>
        </member>
        <member name="M:EzCoding.DateTimeLib.WeekOfMonth(System.DateTime,System.Boolean)">
            <summary>
            取得指定日期為當月的第幾周。
            </summary>
            <param name="date">日期。</param>
            <param name="firstDayIsSunOfWeek">若為 true 則表示「周日至周六」為一周；否則為「周一至周日」為一周。</param>
            <returns>指定日期為當月的第幾周。</returns>
        </member>
        <member name="T:EzCoding.DateTimeCLib">
            <summary>
            民國年日期時間函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.DateTimeCLib.GetDate">
            <summary>
            取得目前的 24 小時制民國年日期格式 (yyy/MM/dd)。
            </summary>
            <returns>目前的民國年日期。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.GetDate(System.String)">
            <summary>
            取得目前的民國年日期（e.g., yyy/MM/dd）。
            </summary>
            <param name="separator">日期分隔符號。</param>
            <returns>目前的民國年日期。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.GetDateTime">
            <summary>
            取得目前的 24 小時制民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <returns>目前的 24 小時制民國年日期時間。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.GetDateTime(System.String)">
            <summary>
            取得目前的 24 小時制民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="separator">日期分隔符號。</param>
            <returns>目前的 24 小時制民國年日期時間。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsDate(System.String)">
            <summary>
            驗證 date 參數是否為「1030112」格式。
            </summary>
            <param name="date">未格式化的日期字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsDateFormat(System.String)">
            <summary>
            驗證 date 參數是否為符合日期表示的格式（e.g., 103/1/12）。
            </summary>
            <param name="date">符合日期表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsTime(System.String)">
            <summary>
            驗證 time 參數是否為「133010」格式。
            </summary>
            <param name="time">未格式化的時間字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsTimeFormat(System.String)">
            <summary>
            驗證 time 參數是否為符合時間表示的格式（e.g., 13:30:10）。
            </summary>
            <param name="time">符合時間表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsDateTime(System.String)">
            <summary>
            驗證 datetime 參數是否為「133010」或「1030112」或「1030112121030」其中一種格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.IsDateTimeFormat(System.String)">
            <summary>
            驗證 datetime 參數是否為符合日期時間表示的格式（e.g., 103/1/12 13:30:10）。
            </summary>
            <param name="datetime">符合日期時間表示的格式字串。</param>
            <returns>如果 date 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.TryParse(System.String,System.String@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime 字串。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間格式化後的字串值（「13:30:10」或「103/01/12」或「103/01/12/ 12:10:30」）；如果轉換失敗，則為 empty。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.TryParse(System.String,System.String,System.IFormatProvider,System.String@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime 字串。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="format">格式字串。</param>
            <param name="provider">IFormatProvider 物件，提供關於 datetime 的文化特性 (Culture) 特定格式資訊。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間格式化後的字串值（依 format 和 provider 參數而定）；如果轉換失敗，則為 empty。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.TryParse(System.String,System.DateTime@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間的 DateTime 值；如果轉換失敗，則為 MinValue。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
            <summary>
            將日期和時間的指定字串表示轉換為其對等的 DateTime。
            </summary>
            <param name="datetime">未格式化的日期時間字串，含有要轉換的日期和時間，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="provider">IFormatProvider 物件，提供關於 datetime 的文化特性 (Culture) 特定格式資訊。</param>
            <param name="styles">DateTimeStyles 值的位元組合，指出 datetime 的允許格式。一般會指定的值是 None。</param>
            <param name="result">當這個方法傳回時，如果轉換成功，則會包含相當於 datetime 中所含之日期和時間的 DateTime 值；如果轉換失敗，則為 MinValue。</param>
            <returns>如果 datetime 參數轉換成功，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTimeFormat(System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTimeFormat(System.String,System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="separator">日期分隔符號。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTimeFormat(System.Object)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，引收僅接受「133010」或「1030112」或「1030112121030」三種格式，且必須為數字格式。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTimeFormat(System.Object,System.String)">
            <summary>
            將未格式化的日期時間字串轉換成格式化的日期時間格式。
            </summary>
            <param name="datetime">未格式化的日期時間字串，引收僅接受「133010」或「1030112」或「1030112121030」三種格式，且必須為數字格式。</param>
            <param name="separator">日期分隔符號。</param>
            <returns>格式化的日期時間格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTime(System.String)">
            <summary>
            將未格式化或符合日期時間表示格式的日期時間字串轉換成 System.DateTime。
            預設取得與文化特性無關的（不變的）System.Globalization.CultureInfo。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTime(System.Object)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            預設取得與文化特性無關的（不變的）System.Globalization.CultureInfo。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTime(System.Object,System.IFormatProvider)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="provider">System.IFormatProvider 介面實作，提供特定文化特性的格式資訊。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ToDateTime(System.String,System.IFormatProvider)">
            <summary>
            將未格式化的日期時間字串轉換成 System.DateTime。
            </summary>
            <param name="datetime">未格式化或符合日期時間表示格式的日期時間字串，未格式化日期時間參數僅接受「133010」或「1030112」或「1030112121030」三種格式。</param>
            <param name="provider">System.IFormatProvider 介面實作，提供特定文化特性的格式資訊。</param>
            <returns>System.DateTime。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 僅接受「133010」或「1030112」或「1030112121030」三種格式，或符合日期時間表示格式的日期時間字串。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDate(System.String)">
            <summary>
            取得 24 小時制的民國年日期格式 (yyy/MM/dd)。
            </summary>
            <param name="date">西元年表示的日期字串（yyyy/MM/dd 或 yyyyMMdd）。</param>
            <returns>24 小時制的民國年日期格式 (yyy/MM/dd)。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 不包含日期和時間的有效字串表示。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDate(System.String,EzCoding.DateTimeLibStyle)">
            <summary>
            將西元年日期轉換為民國年日期格式。
            </summary>
            <param name="date">西元年表示的日期字串（yyyy/MM/dd 或 yyyyMMdd）。</param>
            <param name="style">日期時間樣式。</param>
            <returns>民國年日期格式。</returns>
            <exception cref="T:System.ArgumentNullException">參數 date 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 date 不包含日期和時間的有效字串表示。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDate(System.DateTime)">
            <summary>
            將西元年日期轉換為民國年日期格式（e.g., yyy/MM/dd）。
            </summary>
            <param name="datetime">日期。</param>
            <returns>民國年日期格式。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDate(System.DateTime,System.String)">
            <summary>
            將西元年日期轉換為民國年日期格式（e.g., yyy/MM/dd）。
            </summary>
            <param name="datetime">日期。</param>
            <param name="separator">日期分隔符號。</param>
            <returns>民國年日期格式。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDateTime(System.String)">
            <summary>
            將西元年日期時間轉換為民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="datetime">西元年表示的日期時間字串（yyyy/MM/dd HH:mm:ss）。</param>
            <returns>24 小時制的民國年日期時間格式 (yyy/MM/dd HH:mm:ss)。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 不包含日期和時間的有效字串表示。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDateTime(System.DateTime)">
            <summary>
            將西元年日期時間轉換為民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="datetime">日期時間。</param>
            <returns>24 小時制的民國年日期時間格式 (yyy/MM/dd HH:mm:ss)。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDateTime(System.DateTime,System.String)">
            <summary>
            將西元年日期時間轉換為民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="datetime">日期時間。</param>
            <param name="separator">日期分隔符號。</param>
            <returns>民國年日期格式。</returns>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDateTime(System.String,EzCoding.DateTimeLibStyle)">
            <summary>
            將西元年日期時間轉換為民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="datetime">日期時間（yyyy/MM/dd HH:mm:ss 或 yyyyMMddHHmmss）。</param>
            <param name="style">日期時間樣式。</param>
            <returns>24 小時制的民國年日期時間格式 (yyy/MM/dd HH:mm:ss)。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 不包含日期和時間的有效字串表示。</exception>
        </member>
        <member name="M:EzCoding.DateTimeCLib.ConvertChrEraToDateTime(System.DateTime,EzCoding.DateTimeLibStyle)">
            <summary>
            將西元年日期時間轉換為民國年日期時間格式（e.g., yyy/MM/dd HH:mm:ss）。
            </summary>
            <param name="datetime">日期時間（yyyy/MM/dd HH:mm:ss 或 yyyyMMddHHmmss）。</param>
            <param name="style">日期時間樣式。</param>
            <returns>24 小時制的民國年日期時間格式 (yyy/MM/dd HH:mm:ss)。</returns>
            <exception cref="T:System.ArgumentNullException">參數 datetime 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">參數 datetime 不包含日期和時間的有效字串表示。</exception>
        </member>
        <member name="T:EzCoding.ISystemId">
            <summary>
            系統代號的實作介面。
            </summary>
        </member>
        <member name="M:EzCoding.ISystemId.GetUnsafeValue">
            <summary>
            取得未經合法性驗證的系統代號原值。
            </summary>
        </member>
        <member name="M:EzCoding.ISystemId.Renew">
            <summary>
            建立或重置目前執行個體的系統代號。
            </summary>
        </member>
        <member name="M:EzCoding.ISystemId.GetSerialLength">
            <summary>
            取得指定的流水號長度。
            </summary>
        </member>
        <member name="M:EzCoding.ISystemId.GetSerialNumber">
            <summary>
            取得目前執行個體的系統代號流水號。
            </summary>
        </member>
        <member name="M:EzCoding.ISystemId.ToString">
            <summary>
            傳回目前執行個體所存在的系統代號。
            </summary>
            <returns>系統代號。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.ToString(System.Boolean)">
            <summary>
            傳回目前執行個體所存在的系統代號。
            </summary>
            <returns>系統代號。</returns>
            <param name="renew">是否重置目前執行個體的系統代號。</param>
        </member>
        <member name="M:EzCoding.ISystemId.IsSystemId">
            <summary>
            驗證目前執行個體的系統代號格式是否正確。
            </summary>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.IsSystemId(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.IsSystemId(EzCoding.ISystemId)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.IsEmpty">
            <summary>
            目前執行個體是否為定義 SystemId.Empty 的系統代號空值。
            </summary>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.IsEmpty(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否為定義 SystemId.Empty 的系統代號空值。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.IsEmpty(EzCoding.ISystemId)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否為定義 SystemId.Empty 的系統代號空值。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.CheckValid(System.String[])">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            若都正確，則傳回長度為零的陣列；否則傳回所有驗證不通過的系統代號字串。
            </summary>
            <param name="systemIds">含有零或多個的系統代號字串陣列。</param>
            <returns>若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.CheckValid(EzCoding.ISystemId[])">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。
            </summary>
            <param name="systemIds">含有零或多個的系統代號陣列。</param>
            <returns>若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.TryParse(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            若正確，則傳回 EzCoding.ISystemId；否則傳回 null。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。</returns>
        </member>
        <member name="M:EzCoding.ISystemId.Copy">
            <summary>
            複製一份相同值的新系統代號。
            </summary>
            <returns>相同值的新系統代號。</returns>
        </member>
        <member name="P:EzCoding.ISystemId.Value">
            <summary>
            取得或設定系統代號的值。
            </summary>
        </member>
        <member name="T:EzCoding.SystemId">
            <summary>
            系統代號的實作類別。
            </summary>
        </member>
        <member name="F:EzCoding.SystemId.MIN_VALUE_PREFIX">
            <summary>
            EzCoding.SystemId 最小值的前綴字串。
            </summary>
        </member>
        <member name="F:EzCoding.SystemId.MAX_VALUE_PREFIX">
            <summary>
            SystemId 最大值的前綴字串。
            </summary>
        </member>
        <member name="M:EzCoding.SystemId.#ctor">
            <summary>
            初始化 EzCoding.SystemId 類別的新執行個體。
            初始化時會自動產生一組系統代號。
            </summary>
        </member>
        <member name="M:EzCoding.SystemId.#ctor(System.Int32)">
            <summary>
            初始化 EzCoding.SystemId 類別的新執行個體。
            初始化時會自動產生一組系統代號。
            </summary>
            <param name="serialLength">指定的流水號長度（基礎長度固定為 10 碼，再加上流水號長度）。</param>
        </member>
        <member name="M:EzCoding.SystemId.#ctor(System.String)">
            <summary>
            依指定的系統代號初始化 EzCoding.SystemId 類別的新執行個體（不驗證格式是否正確）。
            </summary>
            <param name="systemId">指定的系統代號。</param>
            <exception cref="T:System.ArgumentNullException">參數 systemId 不允許為 null 值。</exception>
            <exception cref="T:System.FormatException">systemId 格式不正確。</exception>
        </member>
        <member name="M:EzCoding.SystemId.#ctor(System.String,EzCoding.ISystemId)">
            <summary>
            依指定的系統代號初始化 EzCoding.SystemId 類別的新執行個體。
            </summary>
            <param name="systemId">指定的系統代號。</param>
            <param name="verifier">指定要使用的系統代號驗證類別。不同的驗證原則，請繼承 EzCoding.SystemId 類別並覆寫 IsSystemId(string systemId) 方法。</param>
            <exception cref="T:System.ArgumentNullException">參數 systemId 不允許為 null 值。</exception>
            <exception cref="T:System.ArgumentNullException">參數 verifier 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.SystemId.GetUnsafeValue">
            <summary>
            取得未經合法性驗證的系統代號原值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:EzCoding.SystemId.GetSerialLength">
            <summary>
            取得指定的流水號長度。
            </summary>
        </member>
        <member name="M:EzCoding.SystemId.GetSerialNumber">
            <summary>
            取得目前執行個體的系統代號流水號。
            </summary>
        </member>
        <member name="M:EzCoding.SystemId.Renew">
            <summary>
            建立或重置目前執行個體的系統代號。
            </summary>
        </member>
        <member name="M:EzCoding.SystemId.GetHashCode">
            <summary>
            傳回這個執行個體雜湊的程式碼。
            </summary>
            <returns>這個執行個體雜湊的程式碼。</returns>
        </member>
        <member name="M:EzCoding.SystemId.Equals(System.Object)">
            <summary>
            指示這個執行個體與指定的物件是否相等。
            </summary>
            <param name="obj">要比較的另一個物件。</param>
            <returns>若相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.Equals(EzCoding.ISystemId)">
            <summary>
            判斷這個執行個體和另一個指定的 ISystemId 物件是否具有相同的值。
            </summary>
            <param name="other">EzCoding.ISystemId。</param>
            <returns>如果 value 參數的值與這個執行個體相同，則為 true，否則為 false。</returns>
            <exception cref="T:System.ArgumentNullException">參數 value 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.SystemId.Equals(System.String)">
            <summary>
            判斷這個執行個體和另一個指定的 SystemId 物件是否具有相同的值。
            </summary>
            <param name="other">EzCoding.SystemId。</param>
            <returns>如果 value 參數的值與這個執行個體相同，則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.Equals(EzCoding.ISystemId,EzCoding.ISystemId)">
            <summary>
            判斷兩個指定的 ISystemId 物件是否具有相同的值。
            </summary>
            <param name="valueA">EzCoding.ISystemId 參照。</param>
            <param name="valueB">EzCoding.ISystemId 參照。</param>
            <returns>如果 valueA 的值與 valueB 的值相同，則為 true，否則為 false。 </returns>
        </member>
        <member name="M:EzCoding.SystemId.Equals(System.String,System.String)">
            <summary>
            判斷兩個指定的 ISystemId 物件是否具有相同的值。
            </summary>
            <param name="valueA">String 或 Null 參照。</param>
            <param name="valueB">String 或 Null 參照。</param>
            <returns>如果 a 的值與 b 的值相同，則為 true，否則為 false。 </returns>
        </member>
        <member name="M:EzCoding.SystemId.op_Equality(EzCoding.SystemId,EzCoding.SystemId)">
            <summary>
            傳回指示 valueA 是否等於 valueB。
            </summary>
            <param name="valueA">EzCoding.SystemId 參照。</param>
            <param name="valueB">EzCoding.SystemId 參照。</param>
            <returns>若相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.op_Inequality(EzCoding.SystemId,EzCoding.SystemId)">
            <summary>
            傳回指示 valueA 是否不等於 valueB。
            </summary>
            <param name="valueA">EzCoding.SystemId 參照。</param>
            <param name="valueB">EzCoding.SystemId 參照。</param>
            <returns>若不相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.ToString">
            <summary>
            傳回目前執行個體所存在的系統代號。
            </summary>
            <returns>系統代號。</returns>
        </member>
        <member name="M:EzCoding.SystemId.ToString(System.Boolean)">
            <summary>
            傳回目前執行個體所存在的系統代號。
            即使使用預設的系統代號，但若呼叫端仍要求強制重新建立，則一樣會重置目前的系統代號。
            </summary>
            <returns>系統代號。</returns>
            <param name="renew">是否重置目前執行個體的系統代號。</param>
        </member>
        <member name="M:EzCoding.SystemId.ToString(EzCoding.ISystemId[])">
            <summary>
            將指定的系統代號陣列轉換為字串陣列。
            </summary>
            <param name="systemIds">系統代號陣列。</param>
            <returns>以字串表示的系統代號陣列。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsSystemId">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsSystemId(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsSystemId(EzCoding.ISystemId)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>系統代號格式是否正確。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsEmpty">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsEmpty(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsEmpty(EzCoding.ISystemId)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>是否為定義 SystemId.Empty 的系統代號空值。</returns>
        </member>
        <member name="M:EzCoding.SystemId.CheckValid(System.String[])">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            若都正確，則傳回長度為零的陣列；否則傳回所有驗證不通過的系統代號字串。
            </summary>
            <param name="systemIds">含有零或多個的系統代號字串陣列。</param>
            <returns>若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。</returns>
        </member>
        <member name="M:EzCoding.SystemId.CheckValid(EzCoding.ISystemId[])">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。
            </summary>
            <param name="systemIds">含有零或多個的系統代號陣列。</param>
            <returns>若都正確，則傳回 null；否則傳回第一個驗證不通過的系統代號字串。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsDefaultValue(EzCoding.ISystemId)">
            <summary>
            是否為預設的系統代號。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>若為預設的系統代號則傳回 true，否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.IsDefaultValue(System.String)">
            <summary>
            是否為預設的系統代號。
            </summary>
            <param name="systemId">系統代號。</param>
            <returns>若為泛用的預設系統代號則傳回 true，否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.SystemId.GetDefaultValue(System.UInt64)">
            <summary>
            取得指定流水號的預設系統代號。
            </summary>
            <param name="serialNumber">指定的流水號。介於 0 至 9999999999 之間</param>
            <returns>指定流水號的預設系統代號。</returns>
        </member>
        <member name="M:EzCoding.SystemId.TryParse(System.String)">
            <summary>
            以目前執行個體的驗證規則，驗證指定的系統代號格式是否正確。
            </summary>
            <param name="systemId">系統代號或整數值。若參數為整數值，則驗證後傳回預設的系統代號</param>
            <returns>若正確，則傳回 EzCoding.ISystemId；否則傳回 null。</returns>
        </member>
        <member name="M:EzCoding.SystemId.Copy">
            <summary>
            複製一份相同值的新系統代號。
            </summary>
            <returns>相同值的新系統代號。</returns>
        </member>
        <member name="M:EzCoding.SystemId.Copy(EzCoding.ISystemId)">
            <summary>
            複製一份與來源系統代號相同值的新系統代號。
            </summary>
            <param name="srcSId">來源系統代號。</param>
            <returns>與來源系統代號相同值的新系統代號。</returns>
        </member>
        <member name="P:EzCoding.SystemId.IsRenew">
            <summary>
            是否重置目前執行個體的系統代號。
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.SerialLength">
            <summary>
            指定的流水號長度（基礎長度固定為 10 碼，再加上流水號長度）。
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.Value">
            <summary>
            取得或設定系統代號的值。
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.MinValue">
            <summary>
            表示 EzCoding.SystemId 的最小值。
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.MaxValue">
            <summary>
            表示 EzCoding.SystemId 的最大值。
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.EmptyValue">
            <summary>
            取得定義為 SystemId.Empty 的系統代號空值
            </summary>
        </member>
        <member name="P:EzCoding.SystemId.Empty">
            <summary>
            表示 EzCoding.SystemId 的空值。
            </summary>
        </member>
        <member name="T:EzCoding.Returner">
            <summary>
            方法或屬性操作的回傳物件基底類別。
            </summary>
        </member>
        <member name="M:EzCoding.Returner.#ctor">
            <summary>
            初始化 EzCoding.Returner 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Returner.Dispose">
            <summary>
            執行與釋放（Free）、釋放（Release）或重設 Unmanaged 資源相關聯之應用程式定義的工作。
            </summary>
        </member>
        <member name="M:EzCoding.Returner.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">true 表示釋放 Managed 和 Unmanaged 資源；false 表示只釋放 Unmanaged 資源。</param>
        </member>
        <member name="M:EzCoding.Returner.Finalize">
            <summary>
            解構 EzCoding.DataTableMaker 類別的執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Returner.ChangeInto(EzCoding.Returner)">
            <summary>
            除了 Feedback 會直接遞增回饋訊息外，將目前的執行個體的 EzCoding.Returner 基底變成指定的 EzCoding.Returner 內容。
            預設當 source 的 System.Data.DataSet.Tables 與目前執行個體 System.Data.DataSet.Tables 的 TableName 重複時，會以重複來源的 System.Data.DataTable 取代目前執行個體的 System.Data.DataTable。
            </summary>
            <param name="source">指定要複製的來源 EzCoding.Returner。</param>
            <returns>EzCoding.Returner。</returns>
            <exception cref="T:System.ArgumentNullException">參數 source 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Returner.ChangeInto(EzCoding.Returner,EzCoding.OverlapActMode)">
            <summary>
            除了 Feedback 會直接遞增回饋訊息外，將目前的執行個體的 EzCoding.Returner 基底變成指定的 EzCoding.Returner 內容。
            </summary>
            <param name="source">指定要複製的來源 EzCoding.Returner。</param>
            <param name="overlapActMode">當 System.Data.DataSet 中的 System.Data.DataTable 重複時的處理方式。</param>
            <returns>EzCoding.Returner。</returns>
            <exception cref="T:System.ArgumentNullException">參數 source 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Returner.ChangeDataSetInto(System.Data.DataSet,EzCoding.OverlapActMode)">
            <summary>
            將指定的來源 System.Data.DataSet 及 System.Data.DataTable 名稱重複時的操作方式更新目前執行個體的 System.Data.DataSet。
            若發生 System.Data.DataTable 名稱重複但 schema 卻不相符時，則一律以來源 System.Data.DataTable 取代目前執行個體重複的 System.Data.DataTable。
            </summary>
            <param name="source">指定要複製的來源 System.Data.DataSet。</param>
            <param name="overlapActMode">當 System.Data.DataSet 中的 System.Data.DataTable 重複時的處理方式。若選擇合併操作，但 schema 不符則一樣取代。</param>
            <exception cref="T:System.ArgumentNullException">參數 source 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Returner.GetUsableTableName(System.String,System.Int32)">
            <summary>
            在目前執行個體的 System.Data.DataSet 中取得可用的 TableName。
            </summary>
            <param name="tableName">TableName 的使用字串。</param>
            <param name="serialNumber">流水號。</param>
            <returns>可用的 TableName。</returns>
        </member>
        <member name="M:EzCoding.Returner.FillMessage(System.Reflection.MemberInfo,System.String,System.String,System.Boolean,System.Boolean,EzCoding.Priority,EzCoding.TraceLevel)">
            <summary>
            針對整個回傳物件的基底類別，依傳入的被叫用端資訊，滿足叫用端可能需要的判斷依據。
            </summary>
            <param name="memberInfo">System.Reflection.MemberInfo。</param>
            <param name="code">訊息代碼。</param>
            <param name="message">訊息內容。</param>
            <param name="isCompleted">針對某一個方法或行為而言，整個程序操作是否已完成。</param>
            <param name="isContinue">是否繼續下一個程序操作。</param>
            <param name="priority">優先權層級。</param>
            <param name="traceLevel">回饋層級。</param>
            <exception cref="T:System.ArgumentNullException">參數 memberInfo 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Returner.Load(System.IO.Stream)">
            <summary>
            從指定的 System.IO.Stream 載入符合 EzCoding.Returner 格式的 XML 文件（UTF8）。
            </summary>
            <param name="stream">要載入的 XML 資料流。</param>
        </member>
        <member name="M:EzCoding.Returner.Load(System.String)">
            <summary>
            從指定的 URL 或本機檔案載入符合 EzCoding.Returner 格式的 XML 文件（UTF8）。
            </summary>
            <param name="fileName">包含要載入之 XML 文件的檔案的 URL。這個 URL 可以是本機檔案，也可以是 HTTP URL (網址)。</param>
        </member>
        <member name="M:EzCoding.Returner.Load(System.IO.TextReader)">
            <summary>
            從指定的 System.IO.TextReader 載入符合 EzCoding.Returner 格式的 XML 文件（UTF8）。
            </summary>
            <param name="textReader">用於將 XML 資料送入文件中的 System.IO.TextReader。</param>
        </member>
        <member name="M:EzCoding.Returner.Load(System.Xml.XmlReader)">
            <summary>
            從指定的 System.Xml.XmlReader 載入符合 EzCoding.Returner 格式的 XML 文件（UTF8）。
            </summary>
            <param name="xmlReader">用於將 XML 資料送入文件中的 System.Xml.XmlReader。</param>
        </member>
        <member name="M:EzCoding.Returner.Load(System.Xml.XmlDocument)">
            <summary>
            從指定的 System.Xml.XmlDocument 載入符合 EzCoding.Returner 格式的 XML 文件（UTF8）。
            </summary>
            <param name="xml">用於將 XML 資料送入文件中的 System.Xml.XmlDocument。</param>
        </member>
        <member name="M:EzCoding.Returner.GetXml">
            <summary>
            傳回儲存於 EzCoding.Returner 資料的 XML 表示。
            </summary>
            <returns></returns>
        </member>
        <member name="P:EzCoding.Returner.IsCompleted">
            <summary>
            取得或設定程序操作是否完成。預設為 false。
            </summary>
        </member>
        <member name="P:EzCoding.Returner.IsContinue">
            <summary>
            取得或設定程序是否繼續往下執行。預設為 true。
            </summary>
        </member>
        <member name="P:EzCoding.Returner.IsCompletedAndContinue">
            <summary>
            取得是否程序操作完成且繼續往下執行。
            </summary>
        </member>
        <member name="P:EzCoding.Returner.Feedback">
            <summary>
            取得或設定系統內部所產生的任何訊息。
            設定時若回饋層級大於目前執行個體本身的回饋層級，則一律覆寫目前執行個體的 Feedback；若回饋層級等於目前執行個體本身的回饋層級，則再比較優先權層級。
            </summary>
            <exception cref="T:System.ArgumentNullException">Feedback 不允許為 null 值。</exception>
        </member>
        <member name="P:EzCoding.Returner.DataSet">
            <summary>
            取得或設定 System.Data.DataSet 執行個體。
            </summary>
        </member>
        <member name="P:EzCoding.Returner.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="T:EzCoding.PositionOfString">
            <summary>
            字串中的位置記錄物件。
            </summary>
        </member>
        <member name="M:EzCoding.PositionOfString.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            初始化 EzCoding.PositionOfString 類別的新執行個體。
            </summary>
            <param name="value">指定的字串值。</param>
            <param name="startIndex">起始位置。</param>
            <param name="endIndex">結束位置。</param>
        </member>
        <member name="P:EzCoding.PositionOfString.Value">
            <summary>
            指定的字串值。
            </summary>
        </member>
        <member name="P:EzCoding.PositionOfString.StratIndex">
            <summary>
            起始位置。
            </summary>
        </member>
        <member name="P:EzCoding.PositionOfString.EndIndex">
            <summary>
            結束位置。
            </summary>
        </member>
        <member name="T:EzCoding.INameValue`1">
            <summary>
            包含名稱和值的基底介面。
            </summary>
        </member>
        <member name="P:EzCoding.INameValue`1.Name">
            <summary>
            取得或設定名稱。
            </summary>
        </member>
        <member name="P:EzCoding.INameValue`1.Value">
            <summary>
            取得或設定值。
            </summary>
        </member>
        <member name="T:EzCoding.TreeNodeEnquiryRange">
            <summary>
            樹狀節點的查詢範圍。
            </summary>
        </member>
        <member name="F:EzCoding.TreeNodeEnquiryRange.All">
            <summary>
            取得全部的資料。
            </summary>
        </member>
        <member name="F:EzCoding.TreeNodeEnquiryRange.ParentNode">
            <summary>
            僅取得最上層節點的資料。
            </summary>
        </member>
        <member name="F:EzCoding.TreeNodeEnquiryRange.ChildNode">
            <summary>
            依指定的上層節點取得資料。
            </summary>
        </member>
        <member name="T:EzCoding.PairDisplay">
            <summary>
            適用於左右成對的顯示選擇列舉。
            </summary>
        </member>
        <member name="F:EzCoding.PairDisplay.None">
            <summary>
            左右皆不顯示。
            </summary>
        </member>
        <member name="F:EzCoding.PairDisplay.Both">
            <summary>
            左右皆顯示。
            </summary>
        </member>
        <member name="F:EzCoding.PairDisplay.Left">
            <summary>
            僅顯示左邊。
            </summary>
        </member>
        <member name="F:EzCoding.PairDisplay.Right">
            <summary>
            僅顯示右邊。
            </summary>
        </member>
        <member name="T:EzCoding.MemoryNumbers">
            <summary>
            儲存在記憶體中的數值操作。
            </summary>
        </member>
        <member name="P:EzCoding.MemoryNumbers.Number">
            <summary>
            取得儲存在記憶體中的 System.Int32 數值。
            </summary>
        </member>
        <member name="T:EzCoding.IFeedback">
            <summary>
            定義支援系統內部訊息回傳的實作。
            </summary>
        </member>
        <member name="P:EzCoding.IFeedback.Feedback">
            <summary>
            系統內部所產生的任何訊息。
            </summary>
        </member>
        <member name="T:EzCoding.GenerationLib">
            <summary>
            產生函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.GenerationLib.RandomCode(System.Int32,EzCoding.CharacterSetOptions)">
            <summary>
            依指定的輸出字串長度和字串包含的內容，產生隨機的字串。
            </summary>
            <param name="length">輸出字串的總長度。</param>
            <param name="options">字元集選項。</param>
            <returns>指定包含的字串內容中所產生的隨機字串。</returns>
        </member>
        <member name="M:EzCoding.GenerationLib.RandomCode(System.Int32,System.String,EzCoding.CharacterSetOptions)">
            <summary>
            依指定的輸出字串長度和字串包含的內容，產生隨機的字串。
            </summary>
            <param name="length">輸出字串的總長度。</param>
            <param name="baseChars">用來產生隨機字串的基底字元清單。</param>
            <param name="options">字元集選項。</param>
            <returns>指定包含的字串內容中所產生的隨機字串。</returns>
        </member>
        <member name="M:EzCoding.GenerationLib.RandomCode(System.Int32,System.String)">
            <summary>
            依指定的輸出字串長度和字串包含的內容，產生隨機的字串。
            </summary>
            <param name="length">輸出字串的總長度。</param>
            <param name="baseChars">用來產生隨機字串的基底字元清單。</param>
            <returns>指定包含的字串內容中所產生的隨機字串。</returns>
        </member>
        <member name="T:EzCoding.QuotationStyle">
            <summary>
            引述符號樣式列舉清單。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.Empty">
            <summary>
            空的引述符號。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.Parentheses">
            <summary>
            小括號「()」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.Bracket">
            <summary>
            中括號「[]」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.BoldBracket">
            <summary>
            粗中括號「【】」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.Braces">
            <summary>
            大括號「{}」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.SingleQuotes">
            <summary>
            單引號「''」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.ItalicSingleQuotes">
            <summary>
            斜單引號「``」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.DoubleQuotes">
            <summary>
            雙引號「""」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.AngleBracket">
            <summary>
            角括號「＜＞」。
            </summary>
        </member>
        <member name="F:EzCoding.QuotationStyle.Custom">
            <summary>
            自定引述符號樣式。
            </summary>
        </member>
        <member name="T:EzCoding.OperatorCondition">
            <summary>
            判斷式條件。
            </summary>
        </member>
        <member name="F:EzCoding.OperatorCondition.GreaterThan">
            <summary>
            大於。
            </summary>
        </member>
        <member name="F:EzCoding.OperatorCondition.LessThan">
            <summary>
            小於。
            </summary>
        </member>
        <member name="F:EzCoding.OperatorCondition.GreaterEqualThan">
            <summary>
            大於等於。
            </summary>
        </member>
        <member name="F:EzCoding.OperatorCondition.LessEqualThan">
            <summary>
            小於等於。
            </summary>
        </member>
        <member name="F:EzCoding.OperatorCondition.EqualTo">
            <summary>
            等於。
            </summary>
        </member>
        <member name="T:EzCoding.IncludeScope">
            <summary>
            資料取得所包含的範圍。
            </summary>
        </member>
        <member name="F:EzCoding.IncludeScope.All">
            <summary>
            取得全部資料。
            </summary>
        </member>
        <member name="F:EzCoding.IncludeScope.OnlyMarkDeleted">
            <summary>
            僅取得被註解刪除的資料。
            </summary>
        </member>
        <member name="F:EzCoding.IncludeScope.OnlyNotMarkDeleted">
            <summary>
            僅取得未被註解刪除但不論是否啟用的資料。
            </summary>
        </member>
        <member name="F:EzCoding.IncludeScope.OnlyNotMarkDeletedAndEnabledBoth">
            <summary>
            僅取得未被註解刪除且啟用中的資料。
            </summary>
        </member>
        <member name="F:EzCoding.IncludeScope.OnlyNotMarkDeletedAndDisabledBoth">
            <summary>
            僅取得未被註解刪除且停用中的資料。
            </summary>
        </member>
        <member name="T:EzCoding.StringLib">
            <summary>
            字串函式庫。
            </summary>
        </member>
        <member name="F:EzCoding.StringLib.NUMBER_CHARS">
            <summary>
            數值字元集合常數。
            </summary>
        </member>
        <member name="F:EzCoding.StringLib.UPPERCASE_LETTER_CHARS">
            <summary>
            大寫英文字母字元集合常數。
            </summary>
        </member>
        <member name="F:EzCoding.StringLib.LOWERCASE_LETTER_CHARS">
            <summary>
            小寫英文字母字元集合常數。
            </summary>
        </member>
        <member name="F:EzCoding.StringLib.SYMBOL_LETTER_CHARS">
            <summary>
            符號（!@#$%^&amp;*()_+-=[]\;',./{}|:&quot;&lt;&gt;?）字元集合常數。
            </summary>
        </member>
        <member name="M:EzCoding.StringLib.CheckValidChars(System.String,EzCoding.CharacterSetOptions)">
            <summary>
            檢查指定的字串值是否在合法的字元集範圍內。
            若要檢查的字串值為 null 或 empty 則回傳 false。
            </summary>
            <param name="value">要檢查的字串值。</param>
            <param name="options">字元集選項。</param>
            <returns>若在合法的字元集範圍內則為 true；否則為 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.CheckValidChars(System.String,System.String)">
            <summary>
            檢查指定的字串值是否在合法的字元集範圍內。
            若要檢查的字串值或合法的字元集為 null 或 empty 則回傳 false。
            </summary>
            <param name="value">要檢查的字串值。</param>
            <param name="validChars">合法的字元集。</param>
            <returns>若在合法的字元集範圍內則為 true；否則為 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.CheckValidString(System.String,System.String[])">
            <summary>
            驗證字串值是完全符合可用的字串集合中任何一個字串。
            </summary>
            <param name="value">字串值。</param>
            <param name="validStrings">合法的字串集（區分大小寫）。</param>
            <returns>若完全符合可用的字串集合中任何一個字串，則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.Compare(System.String,System.String[],System.StringComparison)">
            <summary>
            比對指定的字串是否包含在合法的字串陣列集合中。
            </summary>
            <param name="value">要用來比對的值。若為 null 或 empty 則永遠傳回 false。</param>
            <param name="validStrings">合法的字串陣列集合。若為 null 或陣列長度等於 0 則永遠傳回 true（除了 value 為 null 或 empty 外）。</param>
            <param name="comparisonType">System.StringComparison。</param>
            <returns>若包含在合法的字串陣列集合中則為 true；否則為 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.RemoveNotNumberPart(System.String)">
            <summary>
            移除非基數為 10 的數字。
            </summary>
            <param name="value">String 字串。</param>
            <returns>數值字串。</returns>
            <exception cref="T:System.ArgumentNullException">參數 value 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.StringLib.SplitBackNumberPart(System.String)">
            <summary>
            將指定字串中前段非數值部份與後段的數值部份切割（例如「A001-01」則回傳「A001-」和「01」）。
            </summary>
            <param name="value">指定的 System.String。</param>
            <returns>EzCoding.LeftRightPair。Right部份，若字串後段沒有何任符合數值的部份，則回傳 string.Empty，否則回傳數值部份。</returns>
        </member>
        <member name="M:EzCoding.StringLib.SplitSurrounded(System.String,EzCoding.LeftRightPair{System.Char,System.Char})">
            <summary>
            傳回 String 陣列，其中包含這個字串中由 surround 內的包覆字元定義所截取的子字串（含空的陣列元素）。
            </summary>
            <param name="value">System.String 字串。</param>
            <param name="surround">指定左右包覆的字元定義。</param>
            <returns>字串陣列，其元素包含了這個字串中由 surround 內的包覆字元定義所截取的子字串。包覆字元不會加入傳回值陣列的元素中。</returns>
        </member>
        <member name="M:EzCoding.StringLib.SplitSurrounded(System.String,EzCoding.LeftRightPair{System.Char,System.Char},System.StringSplitOptions)">
            <summary>
            傳回 String 陣列，其中包含這個字串中由 surround 內的包覆字元定義所截取的子字串。
            </summary>
            <param name="value">System.String 字串。</param>
            <param name="surround">指定左右包覆的字元定義。</param>
            <param name="options">指定 RemoveEmptyEntries，省略傳回陣列的空白陣列元素；或 None，在傳回陣列中包含空白陣列元素。</param>
            <returns>字串陣列，其元素包含了這個字串中由 surround 內的包覆字元定義所截取的子字串。包覆字元不會加入傳回值陣列的元素中。</returns>
        </member>
        <member name="M:EzCoding.StringLib.SplitSurrounded(System.String,EzCoding.LeftRightPair{System.Char,System.Char},System.Int32)">
            <summary>
            傳回 String 陣列，其中包含這個字串中由 surround 內的包覆字元定義所截取的子字串（含空的陣列元素）。
            </summary>
            <param name="value">System.String 字串。</param>
            <param name="surround">指定左右包覆的字元定義。</param>
            <param name="count">要傳回的子字串最大數目。</param>
            <returns>字串陣列，其元素包含了這個字串中由 surround 內的包覆字元定義所截取的子字串。包覆字元不會加入傳回值陣列的元素中。</returns>
        </member>
        <member name="M:EzCoding.StringLib.SplitSurrounded(System.String,EzCoding.LeftRightPair{System.Char,System.Char},System.Int32,System.StringSplitOptions)">
            <summary>
            傳回 String 陣列，其中包含這個字串中由 surround 內的包覆字元定義所截取的子字串。
            </summary>
            <param name="value">System.String 字串。</param>
            <param name="surround">指定左右包覆的字元定義。</param>
            <param name="count">要傳回的子字串最大數目。</param>
            <param name="options">指定 RemoveEmptyEntries，省略傳回陣列的空白陣列元素；或 None，在傳回陣列中包含空白陣列元素。</param>
            <returns>字串陣列，其元素包含了這個字串中由 surround 內的包覆字元定義所截取的子字串。包覆字元不會加入傳回值陣列的元素中。</returns>
        </member>
        <member name="M:EzCoding.StringLib.LastSubstring(System.String,System.Int32)">
            <summary>
            從指定的字串值最後一個字元開始擷取子字串。子字串從最後一個字元倒數回來的指定字元位置開始。
            </summary>
            <param name="value">指定的字串值。</param>
            <param name="length">以最後一個字元為索引值 0 的前提下，取得子字串中的字元數。</param>
            <returns>System.String，其相當於指定的字串值中從最後一個字元（索引值為 0 的位置）倒數回來長度為 length 的子字串；如果 length 為零，則為 Empty。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            startIndex 超出指定的字串值以 0 為起始的範圍。
            startIndex 小於零。
            </exception>
        </member>
        <member name="M:EzCoding.StringLib.LastSubstring(System.String,System.Int32,System.Int32)">
            <summary>
            從指定的字串值最後一個字元開始擷取子字串。子字串從最後一個字元倒數回來的指定字元位置開始，並且具有指定的長度。
            在此方法裡，索引值 0 為指定的字串值的最後一個字元。
            </summary>
            <param name="value">指定的字串值。</param>
            <param name="startIndex">指定的字串值中子字串之以零起始的起始字元位置。在此方法裡，索引值 0 為指定的字串值的最後一個字元。</param>
            <param name="length">以最後一個字元為索引值 0 的前提下，取得子字串中的字元數。</param>
            <returns>System.String，其相當於指定的字串值中從最後一個字元（索引值為 startIndex 的位置）倒數回來長度為 length 的子字串；如果 startIndex 等於指定的字串值的長度，或 length 為零，則為 Empty。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            startIndex 超出指定的字串值以 0 為起始的範圍。
            length 超出指定的字串值長度。
            startIndex 或 length 小於零。
            </exception>
        </member>
        <member name="M:EzCoding.StringLib.PadLeft(System.String,System.Int32)">
            <summary>
            將 value 以指定的 Encoding.UTF8 轉換為 Encoding.Default 編碼後，取得 value 目標編碼的長度並向右對齊，再以空格在左側填補至指定的總長度。
            </summary>
            <param name="value">原始字串。</param>
            <param name="totalWidth">產生的字串中的字元數，等於原始字元加空格填補字元的數目。</param>
            <returns>對等於 value，但是靠右對齊，並在左側填補必要的 paddingChar 字元，以建立 totalWidth 的長度。若 value 字元長度大於 totalWidth，則會傳回截取至 totalWidth 的字元長度的字串。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
        </member>
        <member name="M:EzCoding.StringLib.PadLeft(System.String,System.Int32,System.Char)">
            <summary>
            將 value 以指定的 Encoding.UTF8 轉換為 Encoding.Default 編碼後，取得 value 目標編碼的長度並向右對齊，再以指定的 paddingChar 字元在左側填補至指定的總長度。
            </summary>
            <param name="value">原始字串。</param>
            <param name="totalWidth">產生的字串中的字元數，等於原始字元加上任何其他填補字元的數目。</param>
            <param name="paddingChar">填補字元。</param>
            <returns>對等於 value，但是靠右對齊，並在左側填補必要的 paddingChar 字元，以建立 totalWidth 的長度。若 value 字元長度大於 totalWidth，則會傳回截取至 totalWidth 的字元長度的字串。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
        </member>
        <member name="M:EzCoding.StringLib.PadRight(System.String,System.Int32)">
            <summary>
            將 value 以指定的 Encoding.UTF8 轉換為 Encoding.Default 編碼後，取得 value 目標編碼的長度並向左對齊，再以空格在右側填補至指定的總長度。
            </summary>
            <param name="value">原始字串。</param>
            <param name="totalWidth">產生的字串中的字元數，等於原始字元加空格填補字元的數目。</param>
            <returns>對等於 value，但是靠左對齊，並在右側填補必要的 paddingChar 字元，以建立 totalWidth 的長度。若 value 字元長度大於 totalWidth，則會傳回截取至 totalWidth 的字元長度的字串。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
        </member>
        <member name="M:EzCoding.StringLib.PadRight(System.String,System.Int32,System.Char)">
            <summary>
            將 value 以指定的 Encoding.UTF8 轉換為 Encoding.Default 編碼後，取得 value 目標編碼的長度並向左對齊，再以指定的 paddingChar 字元在右側填補至指定的總長度。
            </summary>
            <param name="value">原始字串。</param>
            <param name="totalWidth">產生的字串中的字元數，等於原始字元加上任何其他填補字元的數目。</param>
            <param name="paddingChar">填補字元。</param>
            <returns>對等於 value，但是靠左對齊，並在右側填補必要的 paddingChar 字元，以建立 totalWidth 的長度。若 value 字元長度大於 totalWidth，則會傳回截取至 totalWidth 的字元長度的字串。</returns>
            <exception cref="T:System.ArgumentNullException">value 為 null 值。</exception>
        </member>
        <member name="M:EzCoding.StringLib.Padding(System.String,System.Int32,System.Char,System.Text.Encoding,System.Text.Encoding,EzCoding.LeftRightDirection)">
            <summary>
            將 value 以指定的 srcEncoding 轉換為 destEncoding 編碼後，取得 value 目標編碼的長度並向指定的方向的反方向對齊，再以指定的 paddingChar 字元在指定的方向填補至指定的總長度。
            </summary>
            <param name="value">原始字串。</param>
            <param name="totalWidth">產生的字串中的字元數，等於原始字元加上任何其他填補字元的數目。</param>
            <param name="paddingChar">填補字元。</param>
            <param name="srcEncoding">原始字串的編碼格式。</param>
            <param name="destEncoding">要將原始字串轉換到的目標編碼格式。</param>
            <param name="paddingDirection">填補的方向。</param>
            <returns>對等於 value，但是靠指定的方向的反方向對齊，並在指定的方向填補必要的 paddingChar 字元，以建立 totalWidth 的長度。若 value 字元長度大於 totalWidth，則會傳回截取至 totalWidth 的字元長度的字串。</returns>
            <exception cref="T:System.ArgumentNullException">
            value 為 null 值。
            srcEncoding 為 null 值。
            destEncoding 為 null 值。
            </exception>
        </member>
        <member name="M:EzCoding.StringLib.CutOutPartialContents(System.String,System.Int32,System.String)">
            <summary>
            截取指定長度的文字內容。
            </summary>
            <param name="value">文字內容。</param>
            <param name="length">指定的長度。</param>
            <param name="padRight">截取得填補在文字內容後的字串。</param>
            <returns>截取後的文字內容。若文字內容長度小於指定的長度，將回傳完整的文字內容。</returns>
        </member>
        <member name="M:EzCoding.StringLib.IsBig5String(System.String,System.Boolean)">
            <summary>
            驗證字串是完全符合 BIG5 字集中的中文字。
            此驗證僅驗證是否為 BIG5 中文字集中的字，半形英數字及不屬於 BIG5 字集區間皆會傳回 false。
            </summary>
            <param name="value">驗證的字串值。</param>
            <param name="containsPunctuationMark">是否包含 BIG5 字集中的標點符號。</param>
            <returns>若為 BIG5 字集中的中文字，則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.IsBig5Char(System.String,System.Boolean)">
            <summary>
            驗證單一個字是否為 BIG5 字集中的中文字。
            此驗證僅驗證是否為 BIG5 中文字集中的字，半形英數字及不屬於 BIG5 字集區間皆會傳回 false。
            </summary>
            <param name="oneWord">驗證字串的其中一個字。</param>
            <param name="containsPunctuationMark">是否包含 BIG5 字集中的標點符號。</param>
            <returns>若為 BIG5 字集中的中文字，則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.IsDigraphEncoding(System.String)">
            <summary>
            驗證字串內容是否皆為雙字符編碼的字串。
            </summary>
            <param name="value">字串內容。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.StringLib.RemoveExtraDecimalZero(System.String)">
            <summary>
            移除小數點多餘的 0。
            </summary>
            <param name="value">數值字串。</param>
            <returns>移除小數點多餘 0 後的數值字串。</returns>
        </member>
        <member name="M:EzCoding.StringLib.MaskingPartOf(System.Int32,System.String)">
            <summary>
            遮蔽字串中的部份字元。
            </summary>
            <param name="options">1:遮蔽雙數字元 2:遮蔽單數字元 3:遮蔽前半段字元 4:遮蔽後半段字元。</param>
            <param name="value">字串值。</param>
            <returns>包含指定遮蔽字元的字串值。</returns>
        </member>
        <member name="T:EzCoding.ListingPoint">
            <summary>
            資料取得的時間點。
            </summary>
        </member>
        <member name="F:EzCoding.ListingPoint.All">
            <summary>
            全部。
            </summary>
        </member>
        <member name="F:EzCoding.ListingPoint.Activating">
            <summary>
            作用中的。
            </summary>
        </member>
        <member name="F:EzCoding.ListingPoint.Historical">
            <summary>
            歷史的。
            </summary>
        </member>
        <member name="T:EzCoding.SchedulingOptions">
            <summary>
            排程方式。
            </summary>
        </member>
        <member name="F:EzCoding.SchedulingOptions.Interval">
            <summary>
            以指定的時間間隔進行。
            </summary>
        </member>
        <member name="F:EzCoding.SchedulingOptions.SpecifiedTime">
            <summary>
            在指定的時間進行。
            </summary>
        </member>
        <member name="T:EzCoding.NumberCalculateDirection">
            <summary>
            數值計算的方向。
            </summary>
        </member>
        <member name="F:EzCoding.NumberCalculateDirection.Increase">
            <summary>
            增加或遞增。
            </summary>
        </member>
        <member name="F:EzCoding.NumberCalculateDirection.Decrease">
            <summary>
            減少或遞減。
            </summary>
        </member>
        <member name="T:EzCoding.YearFormat">
            <summary>
            年份格式。
            </summary>
        </member>
        <member name="F:EzCoding.YearFormat.None">
            <summary>
            不指定。
            </summary>
        </member>
        <member name="F:EzCoding.YearFormat.ChrEra">
            <summary>
            西元年。
            </summary>
        </member>
        <member name="F:EzCoding.YearFormat.ROC">
            <summary>
            民國年。
            </summary>
        </member>
        <member name="T:EzCoding.Drawing.Drawing2D.RectangleSize">
            <summary>
            表示寬與高的矩形大小。
            </summary>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.RectangleSize.GetHashCode">
            <summary>
            傳回這個執行個體雜湊的程式碼。
            </summary>
            <returns>這個執行個體雜湊的程式碼。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.RectangleSize.Equals(System.Object)">
            <summary>
            指示這個執行個體與指定的物件是否相等。
            </summary>
            <param name="obj">要比較的另一個物件。</param>
            <returns>若相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.RectangleSize.Equals(EzCoding.Drawing.Drawing2D.RectangleSize)">
            <summary>
            傳回指示這個執行個體是否等於指定之 EzCoding.Drawing.Drawing2D.RectangleSize 的值。
            </summary>
            <param name="other">要和這個執行個體比較的 EzCoding.Drawing.Drawing2D.RectangleSize 值。</param>
            <returns>若相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.RectangleSize.op_Equality(EzCoding.Drawing.Drawing2D.RectangleSize,EzCoding.Drawing.Drawing2D.RectangleSize)">
            <summary>
            傳回指示 rectangleSizeA 是否等於 rectangleSizeB。
            </summary>
            <param name="rectangleSizeA">EzCoding.Drawing.Drawing2D.RectangleSize 參照。</param>
            <param name="rectangleSizeB">EzCoding.Drawing.Drawing2D.RectangleSize 參照。</param>
            <returns>若相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.Drawing.Drawing2D.RectangleSize.op_Inequality(EzCoding.Drawing.Drawing2D.RectangleSize,EzCoding.Drawing.Drawing2D.RectangleSize)">
            <summary>
            傳回指示 rectangleSizeA 是否不等於 rectangleSizeB。
            </summary>
            <param name="rectangleSizeA">EzCoding.Drawing.Drawing2D.RectangleSize 參照。</param>
            <param name="rectangleSizeB">EzCoding.Drawing.Drawing2D.RectangleSize 參照。</param>
            <returns>若不相等則傳回 true；否則傳回 false。</returns>
        </member>
        <member name="P:EzCoding.Drawing.Drawing2D.RectangleSize.Width">
            <summary>
            矩形的寬度。
            </summary>
        </member>
        <member name="P:EzCoding.Drawing.Drawing2D.RectangleSize.Height">
            <summary>
            矩形的高度。
            </summary>
        </member>
        <member name="T:EzCoding.QuotationMarks">
            <summary>
            引述符號樣式類別。
            </summary>
        </member>
        <member name="M:EzCoding.QuotationMarks.#ctor(EzCoding.QuotationStyle)">
            <summary>
            依引述符號樣式，初始化 EzCoding.QuotationMarks 類別的新執行個體。
            </summary>
            <param name="quotationStyle">引述符號樣式列舉清單。</param>
        </member>
        <member name="M:EzCoding.QuotationMarks.Output(System.String)">
            <summary>
            取得包覆著引述符號樣式的字串。
            </summary>
            <param name="value">需要被引述符號包覆的字串。</param>
            <returns>包覆著引述符號樣式的字串。</returns>
        </member>
        <member name="M:EzCoding.QuotationMarks.Output(System.String,System.Char)">
            <summary>
            取得包覆著引述符號樣式的字串。
            </summary>
            <param name="value">需要被引述符號包覆的字串。</param>
            <param name="symbol">當字串需要因特殊符號而分割包覆時所指定的分割符號。</param>
            <returns>包覆著引述符號樣式的字串。</returns>
            <exception cref="T:System.ArgumentException">參數 value 不允許為 null 值或空字串。</exception>
        </member>
        <member name="P:EzCoding.QuotationMarks.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="T:EzCoding.Feedback">
            <summary>
            定義支援系統內部訊息集合回饋的實作。
            </summary>
        </member>
        <member name="M:EzCoding.Feedback.#ctor">
            <summary>
            初始化 EzCoding.Feedback 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Feedback.Add(EzCoding.FeedbackMessage)">
            <summary>
            加入一筆 EzCoding.FeedbackMessage。
            </summary>
            <param name="feedbackMessage">要加入的 EzCoding.FeedbackMessage。值不可以是 Null 參考。</param>
            <returns>加入的 EzCoding.FeedbackMessage 位於 EzCoding.Feedback 中的索引值。</returns>
            <exception cref="T:System.ArgumentNullException">參數 feedbackMessage 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Feedback.Add(System.String,System.String,System.String,EzCoding.Priority,EzCoding.TraceLevel)">
            <summary>
            加入一筆 EzCoding.FeedbackMessage。
            </summary>
            <param name="code">代碼。</param>
            <param name="message">訊息。</param>
            <param name="where">發生位置。</param>
            <param name="priority">權先權層級。</param>
            <param name="traceLevel">回饋層級。</param>
            <returns>加入的 EzCoding.FeedbackMessage 位於 EzCoding.Feedback 中的索引值。</returns>
        </member>
        <member name="M:EzCoding.Feedback.Clear">
            <summary>
            將所有元素從 EzCoding.Feedback 移除。
            </summary>
        </member>
        <member name="M:EzCoding.Feedback.Remove(EzCoding.FeedbackMessage)">
            <summary>
            從 EzCoding.Feedback 中移除特定物件之第一個符合的 EzCoding.FeedbackMessage。
            </summary>
            <param name="feedbackMessage">要在 EzCoding.Feedback 中移除的 EzCoding.feedbackMessage。</param>
        </member>
        <member name="M:EzCoding.Feedback.RemoveAt(System.Int32)">
            <summary>
            移除 EzCoding.Feedback 的指定索引處的元素。
            </summary>
            <param name="index">要移除元素之以零起始的索引。</param>
        </member>
        <member name="M:EzCoding.Feedback.IndexOf(EzCoding.FeedbackMessage)">
            <summary>
            傳回 EzCoding.Feedback 中第一個符合 EzCoding.FeedbackMessage 以零起始的索引。
            </summary>
            <param name="feedbackMessage">要在 EzCoding.Feedback 中尋找的 EzCoding.FeedbackMessage。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Feedback 中第一個符合元素之以零起始的索引，否則為 -1。</returns>
            <exception cref="T:System.ArgumentNullException">參數 feedbackMessage 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Feedback.Insert(System.Int32,EzCoding.FeedbackMessage)">
            <summary>
            將 EzCoding.FeedbackMessage 插入至位於指定索引的 EzCoding.Feedback 中。
            </summary>
            <param name="index">應該插入 EzCoding.Feedback 處之以零啟始的索引。</param>
            <param name="feedbackMessage">要插入的 EzCoding.FeedbackMessage 。值不可以是 Null 參考。</param>
            <exception cref="T:System.ArgumentNullException">參數 feedbackMessage 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Feedback.FindBy(System.String)">
            <summary>
            依訊息代碼取得所有符合的 FeedbackMessage。
            （訊息代碼不區分大小寫）
            </summary>
            <param name="code">訊息代碼。</param>
            <returns>EzCoding.Feedback。</returns>
        </member>
        <member name="M:EzCoding.Feedback.FindBy(EzCoding.Priority)">
            <summary>
            依優先權層級取得所有符合的 FeedbackMessage。
            </summary>
            <param name="priority">EzCoding.Priority。</param>
            <returns>EzCoding.Feedback。</returns>
        </member>
        <member name="M:EzCoding.Feedback.FindBy(EzCoding.TraceLevel)">
            <summary>
            依優先權層級取得所有符合的 FeedbackMessage。
            </summary>
            <param name="traceLevel">EzCoding.TraceLevel。</param>
            <returns>EzCoding.Feedback。</returns>
        </member>
        <member name="M:EzCoding.Feedback.Ouput">
            <summary>
            輸出 EzCoding.Feedback 所有元素的完整的訊息。
            </summary>
            <returns>完整的訊息。</returns>
        </member>
        <member name="M:EzCoding.Feedback.GetEnumerator">
            <summary>
            傳回在 EzCoding.Feedback 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="M:EzCoding.Feedback.System#Collections#Generic#IEnumerable{EzCoding#FeedbackMessage}#GetEnumerator">
            <summary>
            傳回在 EzCoding.Feedback&lt;T&gt; 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="P:EzCoding.Feedback.Item(System.Int32)">
            <summary>
            依索引子取得或設定 EzCoding.FeedbackMessage。
            </summary>
        </member>
        <member name="P:EzCoding.Feedback.Count">
            <summary>
            取得簡單資料集合中實際包含的簡單資料執行個體數。
            </summary>
        </member>
        <member name="P:EzCoding.Feedback.ContainsErrorMessage">
            <summary>
            是否包含錯誤訊息。
            </summary>
        </member>
        <member name="P:EzCoding.Feedback.LastFeedbackMessage">
            <summary>
            取得最後一個 FeedbackMessage。
            </summary>
            <returns>EzCoding.FeedbackMessage。</returns>
        </member>
        <member name="P:EzCoding.Feedback.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="T:EzCoding.Sex">
            <summary>
            性別列舉。
            </summary>
        </member>
        <member name="F:EzCoding.Sex.Male">
            <summary>
            男性。
            </summary>
        </member>
        <member name="F:EzCoding.Sex.Female">
            <summary>
            女性。
            </summary>
        </member>
        <member name="T:EzCoding.OverlapActMode">
            <summary>
            重複時的處理方式。
            </summary>
        </member>
        <member name="F:EzCoding.OverlapActMode.Ignore">
            <summary>
            忽略。
            </summary>
        </member>
        <member name="F:EzCoding.OverlapActMode.Replace">
            <summary>
            取代。
            </summary>
        </member>
        <member name="F:EzCoding.OverlapActMode.Merge">
            <summary>
            合併。
            </summary>
        </member>
        <member name="F:EzCoding.OverlapActMode.Rename">
            <summary>
            將新的重複來源重新命名。
            </summary>
        </member>
        <member name="T:EzCoding.VerificationLib">
            <summary>
            驗證函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.VerificationLib.IsNumber(System.String)">
            <summary>
            依指定的字串檢查是否為正負基數 10 的數字型態。
            </summary>
            <param name="value">要驗證的字串。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsDecimal(System.String)">
            <summary>
            依指定的字串檢查是否為正負基數 10 的數字（含小數）型態。
            </summary>
            <param name="value">要驗證的字串。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsTaiwanIdNumber(System.String)">
            <summary>
            台灣身分證字號驗證。
            </summary>
            <param name="idNumber">台灣身分證字號。</param>
            <returns>若驗證通過則傳回 true，否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsEmail(System.String)">
            <summary>
            驗證 E-mail 格式是否正確。
            </summary>
            <param name="email">E-mail address</param>
            <returns>若驗證通過則傳回 true，否則傳回 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsDomainName(System.String)">
            <summary>
            驗證網域名稱是否正確（例 www.ezcoding.net）。
            此驗證不包含 protocol 和網址路徑部份。
            </summary>
            <param name="domainName">要驗證的網域名稱。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsUrl(System.String)">
            <summary>
            驗證 URL 格式是否正確（例 http://www.ezcoding.net/index.html）。
            此網址必須為絕對 URI，驗證格式為「protocol://domain:[port][/path|filename]]」。
            </summary>
            <param name="url">驗證證的網址。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsIPHost(System.String)">
            <summary>
            驗證 IP 或網域名稱是否正確。
            此驗證不包含 protocol 和網址路徑部份。
            </summary>
            <param name="host">IP 或 Domain Name。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.VerificationLib.IsRocBan(System.String)">
            <summary>
            中華民國營利事業統一編號 (Business Accounting Number)。
            </summary>
            <param name="ban">營利事業統一編號（共八碼）。</param>
            <returns>如果驗證通過則回傳 true，若不通過則回傳 false。</returns>
        </member>
        <member name="T:EzCoding.Scheduler">
            <summary>
            排程器的基底類別
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String)">
            <summary>
            初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String,System.Int32)">
            <summary>
            以指定的時間間隔排程方式，初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
            <param name="executeInterval">執行的間隔時間 (分鐘)。</param>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String,System.TimeSpan[])">
            <summary>
            以指定時間的排程方式，初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String,System.DayOfWeek[],System.TimeSpan[])">
            <summary>
            以指定的星期和時間的排程方式，初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
            <param name="executeWeeks">指定的排程執行星期集合陣列。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String,System.Int32[],System.TimeSpan[])">
            <summary>
            以指定一個月中的哪幾天和時間的排程方式，初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
            <param name="executeDaysOfMonth">指定的排程執行每月中的哪幾天集合陣列。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.#ctor(System.String,System.Int32[],System.Int32[],System.TimeSpan[])">
            <summary>
            以指定一年中的哪幾月、該月中的哪幾天和時間的排程方式，初始化 EzCoding.Scheduler 類別的新執行個體。
            </summary>
            <param name="name">排程器名稱。</param>
            <param name="executeMonthsOfYear">指定的排程執行每年中的哪幾個月集合陣列。</param>
            <param name="executeDaysOfMonth">指定的排程執行每月中的哪幾天集合陣列。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.GetExecuteMonthsOfYear">
            <summary>
            取得目前執行個體於每年的哪些月份開始執行排程。
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.GetExecuteDaysOfMonth">
            <summary>
            取得目前執行個體於每月的哪幾天開始執行排程。
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.GetExecuteWeeks">
            <summary>
            取得目前執行個體於每週幾開始執行排程。
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.GetExecuteTimes">
            <summary>
            取得目前執行個體於一天中的哪些時間執行排程。
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.Set(System.Int32)">
            <summary>
            將排程器設定為以指定的時間間隔排程方式排程。
            </summary>
            <param name="executeInterval">執行的間隔時間 (分鐘)。</param>
        </member>
        <member name="M:EzCoding.Scheduler.Set(System.TimeSpan[])">
            <summary>
            將排程器設定為以指定時間方式排程。
            </summary>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.Set(System.DayOfWeek[],System.TimeSpan[])">
            <summary>
            將排程器設定為以指定星期和時間方式排程。
            </summary>
            <param name="executeWeeks">指定的排程執行星期集合陣列。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.Set(System.Int32[],System.TimeSpan[])">
            <summary>
            將排程器設定為以指定星期和時間方式排程。
            </summary>
            <param name="executeDaysOfMonth">指定的排程執行每月中的哪幾天集合陣列。若日期小於 1，則預設為 1；若日期大於該月最大天數，則預設等於該月最大天數。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.Set(System.Int32[],System.Int32[],System.TimeSpan[])">
            <summary>
            將排程器設定為以指定星期和時間方式排程。
            </summary>
            <param name="executeMonthsOfYear">指定的排程執行每年中的哪幾個月集合陣列。若月份小於 1，則預設為 1；若月份大於12，則預設等於 12。</param>
            <param name="executeDaysOfMonth">指定的排程執行每月中的哪幾天集合陣列。若日期小於 1，則預設為 1；若日期大於該月最大天數，則預設等於該月最大天數。</param>
            <param name="executeTimes">指定的排程執行時間集合陣列。</param>
        </member>
        <member name="M:EzCoding.Scheduler.ReinitVariableValue">
            <summary>
            重新初始化指定時間排程的變數值。
            </summary>
        </member>
        <member name="M:EzCoding.Scheduler.Check">
            <summary>
            檢查是否執行排程。
            </summary>
            <returns>若開始執行排程則回傳 true；否則回傳 false。</returns>
        </member>
        <member name="M:EzCoding.Scheduler.Execute">
            <summary>
            開始執行排程。
            </summary>
        </member>
        <member name="P:EzCoding.Scheduler.Name">
            <summary>
            排程器名稱。
            </summary>
        </member>
        <member name="P:EzCoding.Scheduler.SchedulingOptions">
            <summary>
            取得排程方式。
            </summary>
        </member>
        <member name="P:EzCoding.Scheduler.ExecuteInterval">
            <summary>
            取得執行的間隔時間。
            若非以指定的時間間隔進行的排程，則傳回 -1。
            </summary>
        </member>
        <member name="P:EzCoding.Scheduler.IsRunning">
            <summary>
            檢查排程器是否尚在執行中。
            此方法僅針對非同步作業的檢查，在同步作業下，永遠回傳 false。
            非同步作業時，請覆寫此方法。
            </summary>
            <returns>若執行中回傳 true；否則回傳 false。</returns>
        </member>
        <member name="T:EzCoding.MathLib">
            <summary>
            自訂數學函式庫。
            </summary>
        </member>
        <member name="M:EzCoding.MathLib.Sfloat(System.Decimal,System.Int32)">
            <summary>
            無條件捨去指定位置後的小數。
            </summary>
            <param name="value">數值。</param>
            <param name="digit">返回值的小數位數（介於 0 至 28）。</param>
            <returns>具有精確度等於 digit 的 value 之數字。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 digit 必須介於 0 至 28 之間。</exception>
        </member>
        <member name="M:EzCoding.MathLib.Sfloat(System.Double,System.Int32)">
            <summary>
            無條件捨去指定位置後的小數。
            </summary>
            <param name="value">數值。</param>
            <param name="digit">返回值的小數位數（介於 0 至 15）。</param>
            <returns>具有精確度等於 digit 的 value 之數字。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 digit 必須介於 0 至 15 之間。</exception>
        </member>
        <member name="M:EzCoding.MathLib.Round(System.Decimal,System.Int32)">
            <summary>
            依指定的精準度取得四捨五入後的值。
            </summary>
            <param name="value">數值。</param>
            <param name="digit">返回值的小數位數（介於 0 至 28）。</param>
            <returns>具有精確度等於 digit 四捨五入後之 value。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 digit 必須介於 0 至 28 之間。</exception>
        </member>
        <member name="M:EzCoding.MathLib.Round(System.Double,System.Int32)">
            <summary>
            依指定的精準度取得四捨五入後的值。
            </summary>
            <param name="value">數值。</param>
            <param name="digit">返回值的小數位數（介於 0 至 15）。</param>
            <returns>具有精確度等於 digit 四捨五入後之 value。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">參數 digit 必須介於 0 至 15 之間。</exception>
        </member>
        <member name="M:EzCoding.MathLib.LowestCommonMultiple(System.Int32,System.Int32)">
            <summary>
            找出兩正整數的最小公倍數。
            </summary>
            <param name="num1">正整數1。</param>
            <param name="num2">正整數2。</param>
            <returns>num1 及 num2 的最小公倍數。</returns>
        </member>
        <member name="M:EzCoding.MathLib.IsPrime(System.UInt64)">
            <summary>
            檢查是否為質數。
            </summary>
            <param name="value">要被檢查的數值。</param>
            <returns>若為質數則傳回 true，否則傳回 false。</returns>
        </member>
        <member name="T:EzCoding.Collections.SimpleDataSet">
            <summary>
            簡單資料執行個體的操作集合。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet.#ctor">
            <summary>
            不初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet.SortByKey``2(EzCoding.Collections.SimpleDataSet{``0,``1},EzCoding.Sort)">
            <summary>
            依目前執行個體的「Key」值排序。
            </summary>
            <param name="list">EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt;。</param>
            <param name="sort">排序方式。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet.SortByValue``2(EzCoding.Collections.SimpleDataSet{``0,``1},EzCoding.Sort)">
            <summary>
            依目前執行個體的「Key」值排序。
            </summary>
            <param name="list">EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt;。</param>
            <param name="sort">排序方式。</param>
        </member>
        <member name="T:EzCoding.Collections.SimpleDataSet`2">
            <summary>
            簡單資料執行個體的操作集合。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor">
            <summary>
            初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor(System.Boolean)">
            <summary>
            依是否允許重複的「Key」值初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
            <param name="allowRepeatedKey">EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否允許有重複的「Key」值。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor(System.Boolean,EzCoding.Collections.SimpleData{`0,`1}[])">
            <summary>
            初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
            <param name="allowRepeatedKey">EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否允許有重複的「Key」值。</param>
            <param name="items">要加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 陣列集合。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor(EzCoding.Collections.SimpleData{`0,`1}[])">
            <summary>
            初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
            <param name="items">初始加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 陣列集合。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor(System.Int32)">
            <summary>
            初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
            <param name="capacity">新清單一開始能夠儲存的項目個數。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.#ctor(System.Int32,System.Boolean)">
            <summary>
            初始化 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
            <param name="capacity">新清單一開始能夠儲存的項目個數。</param>
            <param name="allowRepeatedKey">EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否允許有重複的「Key」值。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Contains(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            檢查 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否包含具有指定 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="item">EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 物件。</param>
            <returns>如果在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中找到 item 則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.KeyContains(`0)">
            <summary>
            檢查 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否包含具有指定 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>如果在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中找到 key 則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.ValueContains(`1)">
            <summary>
            檢查 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否包含具有指定 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value。
            </summary>
            <param name="value">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value。</param>
            <returns>如果在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中找到 value 則為 true，否則為 false。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.KeyToArray">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中的 Key 元素陣列。
            </summary>
            <returns>指定型別的陣列。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.ValueToArray">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中的 Value 元素陣列。
            </summary>
            <returns>指定型別的陣列。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.ToArray">
            <summary>
            傳回 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 陣列。
            </summary>
            <returns>EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 陣列。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Add(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            加入一筆 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="item">要加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。值不可以是 Null 參考。</param>
            <returns>加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 位於 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中的索引值。</returns>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Add(`0,`1)">
            <summary>
            依指定的 key 及 value 加入到 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="key">簡單資料的索引鍵。</param>
            <param name="value">簡單資料的值。</param>
            <returns>加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 位於 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中的索引值。</returns>
            <exception cref="T:System.ArgumentNullException">參數 key 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.ConcatAdd(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            加入一筆 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="item">要加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。值不可以是 Null 參考。</param>
            <returns>目前的執行個體。</returns>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.ConcatAdd(`0,`1)">
            <summary>
            依指定的 key 及 value 加入到 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="key">簡單資料的索引鍵。</param>
            <param name="value">簡單資料的值。</param>
            <returns>目前的執行個體。</returns>
            <exception cref="T:System.ArgumentNullException">參數 key 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Clear">
            <summary>
            將所有元素從 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 移除。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Remove(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            從 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中移除特定物件之第一個符合的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="item">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中移除的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。</param>
            <returns>如果 item 已成功從 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 移除，則為 true，否則為 false。如果在原本的 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中找不到 item，則這個方法也會傳回 false。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.RemoveAt(System.Int32)">
            <summary>
            移除 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 的指定索引處的元素。
            </summary>
            <param name="index">要移除元素之以零起始的索引。</param>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.RemoveByKey(`0)">
            <summary>
            依指定的「Key」值移除 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合的元素。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.RemoveAllByKey(`0)">
            <summary>
            依指定的「Key」值移除 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中所有符合的元素。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.RetainingOnlyOf(System.String[])">
            <summary>
            移除指定的「Key」值外的 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 所有的元素。
            </summary>
            <param name="keys">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找並保留的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Append(EzCoding.Collections.SimpleDataSet{`0,`1})">
            <summary>
            將來源 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 與目前的執行個體合併。
            </summary>
            <param name="source">來源 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt;。</param>
            <exception cref="T:System.ArgumentNullException">參數 source 不允許為 null 值。</exception>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.IndexOf(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 以零起始的索引。
            </summary>
            <param name="item">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合元素之以零起始的索引，否則為 -1。</returns>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.IndexOfKey(`0)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key 以零起始的索引。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合元素之以零起始的索引，否則為 -1。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.IndexOfValue(`1)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value 以零起始的索引。
            </summary>
            <param name="value">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合元素之以零起始的索引，否則為 -1。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Insert(System.Int32,EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            將 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 插入至位於指定索引的 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中。
            請注意 AllowRepeatedKey 為 false 而 item.Key 重複時，item 會移動到指定的 index 並以 item.Value 取代重複 Key 的 Value，而原 Insert 一筆新 item。
            </summary>
            <param name="index">應該插入 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 處之以零啟始的索引。</param>
            <param name="item">要插入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 。值不可以是 Null 參考。</param>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Binding(System.Data.DataTable,System.String,System.String)">
            <summary>
            指定對應的 System.Data.DataTable 與 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 結合。
            </summary>
            <param name="source">System.Data.DataTable。</param>
            <param name="mappingKey">要對應至 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key 屬性的欄位。</param>
            <param name="mappingValue">要對應至 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value 屬性的欄位。</param>
            <exception cref="T:System.ArgumentNullException">參數 source 不允許為 null 值。</exception>
            <returns>目前的執行個體。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.FindByKey(`0)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key 的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            若找不到則回傳 null。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合元素之 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;，否則為 null。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.FindByValue(`1)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value 的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            若找不到則回傳 null。
            </summary>
            <param name="value">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中第一個符合元素之 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;，否則為 null。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.FindAllByKey(`0)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中所有符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key 的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中所有符合元素之 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;，否則為長度為零的 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 陣列。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.FindAllByValue(`1)">
            <summary>
            傳回 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中所有符合 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value 的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="value">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Value。</param>
            <returns>如果找到的話，則為在整個 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中所有符合元素之 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;，否則為長度為零的 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 陣列。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Copy">
            <summary>
            複製目前執行個體的結構和資料。
            </summary>
            <returns>目前執行個體的複本。</returns>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.GetEnumerator">
            <summary>
            傳回在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.System#Collections#Generic#IEnumerable{EzCoding#Collections#SimpleData{TKey@TValue}}#GetEnumerator">
            <summary>
            傳回在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中逐一查看的列舉值。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.Add(System.Object)">
            <summary>
            加入一筆 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="item">要加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。值不可以是 Null 參考。</param>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
            <exception cref="T:System.InvalidCastException">參數 item 必須為 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 物件。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.System#Collections#Generic#ICollection{EzCoding#Collections#SimpleData{TKey@TValue}}#Add(EzCoding.Collections.SimpleData{`0,`1})">
            <summary>
            加入一筆 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            當 EzCoding.AllowRepeat 為 true ，加入「Key」值重複時，會自動覆寫「Value」的值。
            </summary>
            <param name="item">要加入的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。值不可以是 Null 參考。</param>
            <exception cref="T:System.ArgumentNullException">參數 item 不允許為 null 值。</exception>
        </member>
        <member name="M:EzCoding.Collections.SimpleDataSet`2.CopyTo(EzCoding.Collections.SimpleData{`0,`1}[],System.Int32)">
            <summary>
            從特定的 Array 索引開始，複製 ICollection 項目至 Array。
            </summary>
            <param name="array">一維 System.Array，是從 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 複製過來的元素之目的端。System.Array 必須有以零起始的索引。</param>
            <param name="arrayIndex">array 中以零起始的索引，位於複製開始的位置。</param>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.Item(System.Int32)">
            <summary>
            依索引子取得或設定 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="index">索引子。</param>
            <returns>EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。</returns>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.Item(`0)">
            <summary>
            依指定的索引鍵取得 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;。
            </summary>
            <param name="key">要在 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中尋找的 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;.Key。</param>
            <returns>如果找到的話，則回傳 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt;；否則回傳 null。</returns>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.AllowRepeatedKey">
            <summary>
            EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 中是否允許有重複的「Key」值。
            預設是不允許重複。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.Count">
            <summary>
            取得簡單資料集合中實際包含的簡單資料執行個體數。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.SimpleDataSet`2.IsReadOnly">
            <summary>
            取得 EzCoding.Collections.SimpleDataSet&lt;TKey, TValue&gt; 是否為唯讀。
            </summary>
        </member>
        <member name="T:EzCoding.Collections.SimpleData`2">
            <summary>
            二維的簡單資料操作執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleData`2.#ctor">
            <summary>
            初始化 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 類別的新執行個體。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleData`2.#ctor(`0,`1)">
            <summary>
            初始化 EzCoding.Collections.SimpleData&lt;TKey, TValue&gt; 類別的新執行個體，並同時賦予索引鍵與值。
            </summary>
            <param name="key">簡單資料的索引鍵。</param>
            <param name="value">簡單資料的值。</param>
        </member>
        <member name="M:EzCoding.Collections.SimpleData`2.GetRepeatedKeyCount">
            <summary>
            取得當 EzCoding.Collections.SimpleDataSet 執行個體 AllowRepeatedKey 為 false，遇加入 EzCoding.Collections.SimpleData 的 Key 重複總數。
            若非運用在 EzCoding.Collections.SimpleDataSet 及沒有重複的 Key 發生時，此值永遠為 0。
            </summary>
        </member>
        <member name="M:EzCoding.Collections.SimpleData`2.IncreaseRepeatedKeyCount(System.Int32)">
            <summary>
            依指定的遞增值設定 Key 的重複總數。
            </summary>
            <param name="increaseNumber">遞增值。</param>
            <returns>加總後的 Key 重複總數。</returns>
        </member>
        <member name="P:EzCoding.Collections.SimpleData`2.Key">
            <summary>
            取得或設定簡單資料的索引鍵。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.SimpleData`2.Value">
            <summary>
            取得或設定簡單資料的值。
            </summary>
        </member>
        <member name="P:EzCoding.Collections.SimpleData`2.Tag">
            <summary>
            取得或設定和物件相關聯的使用者定義資料。
            </summary>
        </member>
    </members>
</doc>
